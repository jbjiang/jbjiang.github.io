<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Thinkml's blog]]></title>
  <subtitle><![CDATA[happy wife, happy life...]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://needpp.com/"/>
  <updated>2015-12-14T14:59:38.724Z</updated>
  <id>http://needpp.com/</id>
  
  <author>
    <name><![CDATA[thinkml]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[others]]></title>
    <link href="http://needpp.com/2015/12/14/others/"/>
    <id>http://needpp.com/2015/12/14/others/</id>
    <published>2015-12-14T14:49:11.000Z</published>
    <updated>2015-12-14T14:59:38.724Z</updated>
    <content type="html"><![CDATA[<p>昨天，托管到gitcafe的博客不能访问了。一开始还以为是个案。后来得知gitcafe又遭遇<br>了攻击，托管到其上面的静态博客基本上全线奔溃。</p>
<p>然而，我得回去了，暂时写到这里…</p>
<p>最后的结果是做了双保险，同步两处文件。github和gitcafe均保留博客副本。<br>使用www.needpp.com 访问github。<br>needpp.com  访问gitcafe。</p>
<p>噢，对了。因为采用的hexo需要node环境，每次想要更新博客的时候，还得切换回原来的电脑，<br>现在也全部迁移到coding上，webide一步完成，关注文章本身比花更多精力与环境本身更重要！</p>
<p>新的一年又将来临，准备怎么做了吗？</p>
<p>done!</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>昨天，托管到gitcafe的博客不能访问了。一开始还以为是个案。后来得知gitcafe又遭遇<br>了攻击，托管到其上面的静态博客基本上全线奔溃。</p>
<p>然而，我得回去了，暂时写到这里…</p>
<p>最后的结果是做了双保险，同步两处文件。github和gitcaf]]>
    </summary>
    
      <category term="2015" scheme="http://needpp.com/tags/2015/"/>
    
      <category term="life" scheme="http://needpp.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[OAuth2.0 Authorization Model]]></title>
    <link href="http://needpp.com/2015/10/24/OAuth2.0%20Authorization%20Model/"/>
    <id>http://needpp.com/2015/10/24/OAuth2.0 Authorization Model/</id>
    <published>2015-10-23T16:00:00.000Z</published>
    <updated>2015-12-12T03:11:40.783Z</updated>
    <content type="html"><![CDATA[<p>近几天查阅了很多的技术文档、官方非官方的、博客内容、开源项目等 。对OAuth授权模型有了一定的了解，OAuth是一个关于授权（authorization）的开放网络标准，在全世界得到广泛应用，目前的版本是2.0版。网络上关于OAuth的阐述文章很多也有很多具体的实现，这篇文章的目的是总结一下自己针对这个问题的思考过程以及解决方案，以备不时之需。</p>
<h3 id="基本概念">基本概念</h3><p>OAuth2.0是一个开放协议，允许用户让第三方应用以安全且标准的方式获取该用户在某一网站、移动或桌面应用上存储的私密的资源（如用户个人信息、照片、视频、联系人列表），而无需将用户名和密码提供给第三方应用。 </p>
<a id="more"></a>
<ul>
<li>资源拥有者（resource owner）:能授权访问受保护资源的一个实体，比如一个具体的用户。</li>
<li>资源服务器（resource server）:存储受保护资源，客户端通过access token请求资源，资源服务器响应受保护资源给客户端；存储着用户的相关信息。</li>
<li>授权服务器（authorization server）:成功验证资源拥有者并获取授权之后，授权服务器颁发授权令牌（Access Token）给客户端。</li>
<li>客户端（client）：如新浪微博第三方应用，也可以是它自己的官方应用；其本身不存储资源，而是资源拥有者授权通过后，使用它的授权（授权令牌）访问受保护资源，然后客户端把相应的数据展示出来。<br>注：“客户端”术语不代表任何特定实现（如应用运行在一台服务器、桌面、手机或其他设备）。</li>
</ul>
<h3 id="与OAuth1-0_区别">与OAuth1.0 区别</h3><p>OAuth2.0是从2006年开始设计OAuth协议的下一个版本，OAuth2.0同时提供Web，桌面和移动应用程序的支持，并较1.0相比整个授权验证流程更简单更安全。也是新浪、百度、阿里京东、美团等开放平台最主要的用户身份验证和授权方式。<br>OAuth2对比OAuth1，主要改变有下面几点：</p>
<ul>
<li>取消繁琐的签名，全部改用HTTPS。</li>
<li>Access token 从原来的永久令牌变为临时令牌，增加RefreshToken</li>
<li>取消获取RequestToken的步骤</li>
<li>提供了多种场景的授权流程</li>
</ul>
<h3 id="授权类型">授权类型</h3><p>客户端必须得到用户的授权（authorization grant），才能获得令牌（access token。<br>OAuth2.0协议定义了用于获得授权的四种主要授权类型。</p>
<ul>
<li><p>授权码模式 Authorization code<br>标准的Server授权模式，非常适合Server端的Web应用。一旦资源的拥有者授权访问他们的数据之后，他们将会被重定向到Web应用并在URL的查询参数中附带一个授权码（code）。在客户端里，该code用于请求访问令牌（access_token）并且该令牌交换的过程是两个服务端之前完成的，防止其他人甚至是资源拥有者本人得到该令牌。另外，在该授权模式下可以通过refresh_token来刷新令牌以延长访问授权时间。</p>
</li>
<li><p>简化模式 Implicit Grant<br>该模式是所有授权模式中最简单的一种，并为运行于浏览器中的脚本应用做了优化。当用户访问该应用时，服务端会立即生成一个新的访问令牌（access_token）并通过URL的#hash段传回客户端。这时，客户端就可以利用JavaScript等将其取出然后请求API接口。该模式不需要授权码（code），当然也不会提供refresh token以获得长期访问的入口。</p>
</li>
<li><p>密码模式 Resource Owner Password Credentials<br>这种模式要求用户提供用户名和密码来交换访问令牌（access_token）。该模式仅用于非常值得信任的用户，例如API提供者本人所写的移动应用。虽然用户也要求提供密码，但并不需要存储在设备上。因为初始验证之后，只需将OAuth的令牌记录下来即可。如果用户希望取消授权，因为其真实密码并没有被记录，因此无需修改密码就可以立即取消授权。token本身也只是得到有限的授权，因此相比最传统的username/password授权，该模式依然更为安全。</p>
</li>
<li><p>客户端模式 Client Credentials<br>一种基于APP的密钥直接进行授权，因此APP的权限非常大。它适合像数据库或存储服务器这种对API的访问需求</p>
</li>
</ul>
<h3 id="原理过程">原理过程</h3><p>我们这里只描述授权码模式，如下图所示，更过的授权模式的原理可以参考后面的参考资料，这里不再赘述。</p>
<p><img src="http://needpp.qiniudn.com/2015/10/24/1b0bd536-7a53-11e5-8db6-bcaec5dfb67f.png" alt=""></p>
<p>大体按照如下流程进行。<br>A. 用户访问客户端后者将前者导向认证服务器。<br>B. 用户选择是否给予客户端授权。<br>C. 假设用户给予授权，认证服务器将用户导向客户端事先指定的”重定向URI”（redirection URI），同时附上一个授权码。<br>D. 客户端收到授权码，附上早先的”重定向URI”，向认证服务器申请令牌。这一步是在客户端的后台的服务器上完成的，对用户不可见。<br>E. 认证服务器核对了授权码和重定向URI，确认无误后，向客户端发送访问令牌（access token）和更新令牌（refresh token）。</p>
<h3 id="解决方案">解决方案</h3><p>OAuth2.0 只是定义了这么一种规范和标准，来满足授权的安全性以及通用性。如果自己重新造轮子实现的话将是一个不了的任务。<br>经过调研分析，有几种不错的解决方案。</p>
<ul>
<li><p>Oltu +  Shiro<br>二者都是apache的顶级项目，其中<a href="oltu.apache.org">Oltu</a>是OAuth2.0的Java实现。<a href="shiro.apache.org">Shiro</a>是Java的一个安全框架。二者结合起来比较方便。</p>
</li>
<li><p>Spring -security-oauth<br>代码托管在<a href="https://github.com/spring-projects/spring-security-oauth" target="_blank" rel="external">github</a> ,安全性能比前者要高，但是门槛也比较高。</p>
</li>
</ul>
<h3 id="接下来计划">接下来计划</h3><ul>
<li>下载oltu demo并根据官方文档进行快速理解与配置</li>
<li>参考前期收集的资料对oltu与shiro进行整合。</li>
<li>搭建环境并准备后期架构设计和数据库设计。</li>
</ul>
<h3 id="可能问题">可能问题</h3><ul>
<li>这些开源项目使用maven进行管理，需要花时间学习maven</li>
<li>学习shiro原理需要花费一定时间，之前没有考虑到，需要尽量加快步伐</li>
<li>整合过程中的不确定性问题。</li>
</ul>
<h3 id="参考资料">参考资料</h3><p>OAuth基本概述<br><a href="http://www.cnblogs.com/Irving/p/4134629.html" target="_blank" rel="external">http://www.cnblogs.com/Irving/p/4134629.html</a><br>OAuth 2.0 标准<br><a href="http://oauthlib.readthedocs.org/en/latest/oauth2/oauth2.html" target="_blank" rel="external">http://oauthlib.readthedocs.org/en/latest/oauth2/oauth2.html</a><br>理解OAuth 2.0<br><a href="http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html</a><br>OAuth2授权原理<br><a href="http://www.cnblogs.com/neutra/archive/2012/07/26/2609300.html" target="_blank" rel="external">http://www.cnblogs.com/neutra/archive/2012/07/26/2609300.html</a><br>OAuth 2.0模式<br><a href="http://www.dannysite.com/blog/?tag=204" target="_blank" rel="external">http://www.dannysite.com/blog/?tag=204</a><br>OAuth 2.0安全案例回顾<br><a href="http://drops.wooyun.org/papers/598" target="_blank" rel="external">http://drops.wooyun.org/papers/598</a><br>OAuth 认证流程<br><a href="http://blog.sina.com.cn/s/blog_4adc4b090102uxrt.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_4adc4b090102uxrt.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>近几天查阅了很多的技术文档、官方非官方的、博客内容、开源项目等 。对OAuth授权模型有了一定的了解，OAuth是一个关于授权（authorization）的开放网络标准，在全世界得到广泛应用，目前的版本是2.0版。网络上关于OAuth的阐述文章很多也有很多具体的实现，这篇文章的目的是总结一下自己针对这个问题的思考过程以及解决方案，以备不时之需。</p>
<h3 id="基本概念">基本概念</h3><p>OAuth2.0是一个开放协议，允许用户让第三方应用以安全且标准的方式获取该用户在某一网站、移动或桌面应用上存储的私密的资源（如用户个人信息、照片、视频、联系人列表），而无需将用户名和密码提供给第三方应用。 </p>]]>
    
    </summary>
    
      <category term="oauth" scheme="http://needpp.com/tags/oauth/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[GeoLife Model on LetZink]]></title>
    <link href="http://needpp.com/2015/09/01/Geolife%20on%20LetZink/"/>
    <id>http://needpp.com/2015/09/01/Geolife on LetZink/</id>
    <published>2015-08-31T16:00:00.000Z</published>
    <updated>2015-12-12T03:19:25.183Z</updated>
    <content type="html"><![CDATA[<h3 id="代码结构">代码结构</h3><p><img src="http://needpp.qiniudn.com/2015/09/01/ba63550f-5079-11e5-aa5e-87176098b650.jpg" alt=""></p>
<h3 id="数据预处理">数据预处理</h3><p>1.清洗数据<br>通过服务器返回的数据，包含许多冗余的数据，我们需要对其进行抽取，转换成我们需要的数据。<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">getAllUserData</span><span class="params">(String inpath, String opath)</span></span></span><br></pre></td></tr></table></figure></p>
<p>将从服务器获取的json字符串进行清洗、换行成结构化数据。格式如下。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">8566965</span>,<span class="number">1.438734627E9</span>,<span class="number">2015</span>-<span class="number">08</span>-<span class="number">05</span> <span class="number">08</span>:<span class="number">30</span>:<span class="number">27</span>,<span class="number">113.930632</span>,<span class="number">22.541371</span></span><br><span class="line"><span class="number">8566965</span>,<span class="number">1.438734647E9</span>,<span class="number">2015</span>-<span class="number">08</span>-<span class="number">05</span> <span class="number">08</span>:<span class="number">30</span>:<span class="number">47</span>,<span class="number">113.930609</span>,<span class="number">22.541398</span></span><br><span class="line"><span class="number">8566965</span>,<span class="number">1.438734667E9</span>,<span class="number">2015</span>-<span class="number">08</span>-<span class="number">05</span> <span class="number">08</span>:<span class="number">31</span>:<span class="number">07</span>,<span class="number">113.930603</span>,<span class="number">22.541400</span></span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>手动选择具体某一个用户的数据进行分析<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">grep <span class="number">8566965</span> orgin.json  &gt; <span class="number">8566965.</span>gps</span><br><span class="line"></span><br><span class="line">example data:</span><br><span class="line"><span class="number">8566965</span>,<span class="number">1.438734627E9</span>,<span class="number">2015</span>-<span class="number">08</span>-<span class="number">05</span> <span class="number">08</span>:<span class="number">30</span>:<span class="number">27</span>,<span class="number">113.930632</span>,<span class="number">22.541371</span></span><br><span class="line"><span class="number">8566965</span>,<span class="number">1.438734647E9</span>,<span class="number">2015</span>-<span class="number">08</span>-<span class="number">05</span> <span class="number">08</span>:<span class="number">30</span>:<span class="number">47</span>,<span class="number">113.930609</span>,<span class="number">22.541398</span></span><br><span class="line"><span class="number">8566965</span>,<span class="number">1.438734667E9</span>,<span class="number">2015</span>-<span class="number">08</span>-<span class="number">05</span> <span class="number">08</span>:<span class="number">31</span>:<span class="number">07</span>,<span class="number">113.930603</span>,<span class="number">22.541400</span></span><br><span class="line"><span class="number">8566965</span>,<span class="number">1.438734687E9</span>,<span class="number">2015</span>-<span class="number">08</span>-<span class="number">05</span> <span class="number">08</span>:<span class="number">31</span>:<span class="number">27</span>,<span class="number">113.930497</span>,<span class="number">22.541562</span></span><br><span class="line"><span class="number">8566965</span>,<span class="number">1.438734707E9</span>,<span class="number">2015</span>-<span class="number">08</span>-<span class="number">05</span> <span class="number">08</span>:<span class="number">31</span>:<span class="number">47</span>,<span class="number">113.930488</span>,<span class="number">22.541332</span></span><br><span class="line"><span class="number">8566965</span>,<span class="number">1.438734727E9</span>,<span class="number">2015</span>-<span class="number">08</span>-<span class="number">05</span> <span class="number">08</span>:<span class="number">32</span>:<span class="number">07</span>,<span class="number">113.930619</span>,<span class="number">22.541423</span></span><br><span class="line"><span class="number">8566965</span>,<span class="number">1.438734747E9</span>,<span class="number">2015</span>-<span class="number">08</span>-<span class="number">05</span> <span class="number">08</span>:<span class="number">32</span>:<span class="number">27</span>,<span class="number">113.930774</span>,<span class="number">22.541376</span></span><br></pre></td></tr></table></figure></p>
<p>2.初始化用户数据<br><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">选择上面处理过的文件，初始化LetZinkModel 静态成员</span><br><span class="line"><span class="built_in">List</span>&lt;GpsModel&gt; <span class="built_in">list</span></span><br><span class="line">调用初始化方法</span><br><span class="line">setUserGpsData(<span class="built_in">String</span> inpath)</span><br></pre></td></tr></table></figure></p>
<p>3.转换GPS坐标为百度坐标系<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">gps2baidu</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure></p>
<p>调用此方法需要进行百度开放平台的认证。<br>配置开发者账号。这里采用配置的形式，在config.propertys文件里面进行设置。<br><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="id">#file</span> <span class="tag">config</span><span class="class">.propertys</span></span><br><span class="line"><span class="tag">url</span><span class="pseudo">:http</span>:<span class="comment">//api.map.baidu.com/geoconv/v1/?coords=</span></span><br><span class="line"><span class="tag">from</span><span class="pseudo">:1</span></span><br><span class="line"><span class="tag">to</span><span class="pseudo">:5</span></span><br><span class="line"><span class="tag">ak</span><span class="pseudo">:replace</span> <span class="tag">with</span> <span class="tag">your</span> <span class="tag">ak</span></span><br></pre></td></tr></table></figure></p>
<p>4.分割路径<br><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">参数：</span><br><span class="line">diserr：距离阈值。路径的起始点距离小于该值，则该路径舍弃。</span><br><span class="line">timeerr：时间阈值。超过该值，开始一条新的路径。</span><br><span class="line">minrange：区域阈值。超过该值，定义一个新的区域标识号。</span><br><span class="line"><span class="function">separateGpsPath</span>(<span class="value">Double</span> diserr,<span class="value">Double</span> timeerr,<span class="value">Double</span> minrange )</span><br></pre></td></tr></table></figure></p>
<p>5.至此，GPSModel实体对象内容实例如下所示：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">GpsModel [uid=<span class="number">8566965</span>, time=<span class="number">2015</span>-<span class="number">07</span>-<span class="number">31</span> <span class="number">14</span>:<span class="number">36</span>:<span class="number">04</span>, lng=<span class="number">113.928691</span>, lat=<span class="number">22.540987</span>, blng=<span class="number">113.94010624624</span>, blat=<span class="number">22.543624742073</span>, pathid=<span class="number">0</span>, begintime=<span class="number">2015</span>-<span class="number">07</span>-<span class="number">31</span> <span class="number">14</span>:<span class="number">36</span>:<span class="number">04</span>, endtime=<span class="number">2015</span>-<span class="number">07</span>-<span class="number">31</span> <span class="number">18</span>:<span class="number">13</span>:<span class="number">33</span>, areanum=<span class="number">0</span>, area_center_point=<span class="number">22.543624742073</span>,<span class="number">113.94010624624</span>]</span><br></pre></td></tr></table></figure></p>
<p>6.附加步骤，此前是用于weka关联规则分析。<code>generatorARFF()</code>用于生成arff文件。导入weka进行关联规则分析。</p>
<h3 id="建模">建模</h3><h3 id="可视化">可视化</h3><p>借助百度地图LBS服务，将用户的GPS轨迹数据，显示在地图上，并且绘制出轨迹。<br>可视化分为两个部分：</p>
<ul>
<li>包含全部路径的数据表</li>
<li>包含原始数据，不同拆分路径</li>
</ul>
<h3 id="GeoLife_Project_Data_Process">GeoLife Project Data Process</h3><p>Geolife是微软开展的一个项目，采集了182位用户从07-12年大约四年内的个人生活GPS轨迹数据，用于学术研究。关于详细的项目信息可以访问<a href="http://research.microsoft.com/en-us/downloads/b16d359d-d164-469e-9fd4-daa38f2b2e13/" target="_blank" rel="external">微软GeoLife项目</a>。</p>
<h4 id="预处理Geolife数据">预处理Geolife数据</h4><p>原始的文件分散在不同的文件夹里面，而且头部包含一些非结构化的说明，这里采用shell脚本清除掉相关冗余杂乱的数据，最终形成以用户id为文件名的182个文件。里面的数据含义具体表示为：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">用户id，纬度，经度，高度，时间戳</span><br><span class="line"><span class="number">000</span>,<span class="number">39.984683</span>,<span class="number">116.31845</span>,<span class="number">492</span>,<span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span> <span class="number">02</span>:<span class="number">53</span>:<span class="number">10</span></span><br><span class="line"><span class="number">000</span>,<span class="number">39.984686</span>,<span class="number">116.318417</span>,<span class="number">492</span>,<span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span> <span class="number">02</span>:<span class="number">53</span>:<span class="number">15</span></span><br><span class="line"><span class="number">000</span>,<span class="number">39.984688</span>,<span class="number">116.318385</span>,<span class="number">492</span>,<span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span> <span class="number">02</span>:<span class="number">53</span>:<span class="number">20</span></span><br></pre></td></tr></table></figure></p>
<p>处理脚本，需要具有执行权限。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span><br><span class="line"></span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'hell world,begin to deal with this data'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> filename  <span class="keyword">in</span> `ls /home/spark/geolife/data`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$filename</span></span><br><span class="line">	touch ~/sample/<span class="variable">$filename</span></span><br><span class="line">	find ~/geolife/data/<span class="variable">$filename</span>  -name <span class="string">"*.plt"</span> | sort | xargs \</span><br><span class="line">		awk -F <span class="string">','</span> <span class="string">'&#123;print(fname","$1","$2","$4","$6" "$7)&#125;'</span>  fname=<span class="string">"<span class="variable">$filename</span>"</span> &gt;&gt; ~/sample/<span class="variable">$filename</span></span><br><span class="line">	 </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p>
<h3 id="数据采样">数据采样</h3><p>原始的数据采样的频率为5s一次，数据过于密集，增大数据存储开销，也影响数据可视化的性能。更重要的是，这么多的数据在坐标转换为百度坐标系里面的坐标也会带来一系列问题，比如每秒请求次数的限制等等。在geolife整理后数据的基础上，我们进行了抽样处理，由原来的5s一次采样到1分钟一次。具体实现参见GpsDemo项目中<code>edu.dcy.util.ResampleGPS</code>.</p>
<h3 id="坐标转换">坐标转换</h3><p>由原来的GPS坐标体系转换为百度坐标系坐标。采用百度提供的API实现。可以参考<a href="http://developer.baidu.com/map/index.php?title=webapi/guide/changeposition" target="_blank" rel="external">百度坐标转换说明文档</a>。</p>
<p>具体实现也可以参考<code>edu.dcy.gps.LetZinkModel</code>里面的 <code>getRightPoints</code>方法。</p>
<h3 id="导入到mysql">导入到mysql</h3><p><strong>建表</strong><br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">create <span class="tag">table</span> baidugps(</span><br><span class="line">uid int,</span><br><span class="line">lat <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">lng <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="attribute">height</span> <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">10</span>)</span></span>,</span><br><span class="line"><span class="tag">time</span> datetime</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<p><strong>导入数据</strong></p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">mysql -<span class="keyword">u</span> root -p geolife --<span class="keyword">local</span>-<span class="keyword">infile</span>=1 -<span class="keyword">e</span> 'load data <span class="keyword">local</span> <span class="keyword">infile</span> <span class="string">"/home/spark/data/baidu.gps"</span>  into <span class="keyword">table</span> baidugps fields terminated <span class="keyword">by</span> <span class="string">","</span> lines terminated <span class="keyword">by</span> <span class="string">"\n"</span>'</span><br></pre></td></tr></table></figure>
<p>示例数据<br>下面展示的是所有的用户行为数据。（注：这里海拔字段没有列出）<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">mysql&gt; select uid,lat,lng,time from baidugps limit <span class="number">10</span>;</span><br><span class="line">+------+-----------------+-----------------+---------------------+</span><br><span class="line">| uid  | lat             | lng             | time                |</span><br><span class="line">+------+-----------------+-----------------+---------------------+</span><br><span class="line">|    <span class="number">0</span> | <span class="number">39.991669316478</span> | <span class="number">116.32943062745</span> | <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span> <span class="number">02</span>:<span class="number">54</span>:<span class="number">00</span> |</span><br><span class="line">|    <span class="number">0</span> | <span class="number">39.991597427888</span> | <span class="number">116.32713152844</span> | <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span> <span class="number">02</span>:<span class="number">55</span>:<span class="number">00</span> |</span><br><span class="line">|    <span class="number">0</span> | <span class="number">39.991829369523</span> | <span class="number">116.3256071635</span>  | <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span> <span class="number">02</span>:<span class="number">56</span>:<span class="number">00</span> |</span><br><span class="line">|    <span class="number">0</span> | <span class="number">39.991829414529</span> | <span class="number">116.32333614866</span> | <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span> <span class="number">02</span>:<span class="number">57</span>:<span class="number">00</span> |</span><br><span class="line">|    <span class="number">0</span> | <span class="number">39.991665880212</span> | <span class="number">116.32148372188</span> | <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span> <span class="number">02</span>:<span class="number">58</span>:<span class="number">00</span> |</span><br><span class="line">|    <span class="number">0</span> | <span class="number">39.991655125323</span> | <span class="number">116.31976560663</span> | <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span> <span class="number">02</span>:<span class="number">59</span>:<span class="number">00</span> |</span><br><span class="line">|    <span class="number">0</span> | <span class="number">39.991617926075</span> | <span class="number">116.31752622722</span> | <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span> <span class="number">03</span>:<span class="number">00</span>:<span class="number">00</span> |</span><br><span class="line">|    <span class="number">0</span> | <span class="number">39.991682692695</span> | <span class="number">116.31536239765</span> | <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span> <span class="number">03</span>:<span class="number">01</span>:<span class="number">00</span> |</span><br><span class="line">|    <span class="number">0</span> | <span class="number">39.991609968636</span> | <span class="number">116.31304414117</span> | <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span> <span class="number">03</span>:<span class="number">02</span>:<span class="number">00</span> |</span><br><span class="line">|    <span class="number">0</span> | <span class="number">39.991145100999</span> | <span class="number">116.3121520717</span>  | <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span> <span class="number">03</span>:<span class="number">03</span>:<span class="number">00</span> |</span><br><span class="line">+------+-----------------+-----------------+---------------------+</span><br><span class="line"><span class="number">10</span> <span class="function">rows in <span class="title">set</span> <span class="params">(<span class="number">0.00</span> sec)</span></span></span><br></pre></td></tr></table></figure></p>
<p><strong>切分路径</strong><br>上面baidugps表保存的是用户的所有数据，但是没有切分为具体的路径，为了有较好的扩展性，我们使用一张新的表来实现切分路径，该表里面保存有每个用户每条路径的路径号以及起始时间，我们可以根据不同的参数生成不同的路径划分表，与原始数据表baidugps进行关联查询，于是可以根据用户id以及路径号查询这段时间的轨迹数据进行展示。<br>具体实现参考<code>edu.dcy.LetZinkModel</code>里面的<code>separateGpsPath</code>方法。<br>下表表示根据距离阈值为500、时间阈值为10生成的路径划分表。</p>
<p><strong>建立路径划分表</strong><br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> subpath500_10(</span><br><span class="line">uid <span class="built_in">int</span>,</span><br><span class="line">pathid <span class="built_in">int</span>,</span><br><span class="line"><span class="keyword">begin</span> datetime,</span><br><span class="line"><span class="keyword">end</span>  datetime,</span><br><span class="line">points <span class="built_in">int</span>,</span><br><span class="line">dis <span class="keyword">double</span></span><br><span class="line">)</span></span><br></pre></td></tr></table></figure></p>
<p>字段含义分别为：用户id、路径号、开始时间、结束时间、该路径包含的gps记录点数目、起始点距离。便于展示，其中包含gps记录点数以及起始点距离没有列出。<br>示例数据<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">mysql&gt; select uid,pathid,begin,end from subpath500_10 limit <span class="number">10</span>;</span><br><span class="line">+------+--------+---------------------+---------------------+</span><br><span class="line">| uid  | pathid | begin               | end                 |</span><br><span class="line">+------+--------+---------------------+---------------------+</span><br><span class="line">|  <span class="number">127</span> |      <span class="number">1</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">27</span> <span class="number">00</span>:<span class="number">58</span>:<span class="number">00</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">27</span> <span class="number">01</span>:<span class="number">09</span>:<span class="number">00</span> |</span><br><span class="line">|  <span class="number">127</span> |      <span class="number">2</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">27</span> <span class="number">02</span>:<span class="number">33</span>:<span class="number">38</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">27</span> <span class="number">02</span>:<span class="number">46</span>:<span class="number">01</span> |</span><br><span class="line">|  <span class="number">127</span> |      <span class="number">3</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">27</span> <span class="number">03</span>:<span class="number">25</span>:<span class="number">58</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">27</span> <span class="number">03</span>:<span class="number">34</span>:<span class="number">00</span> |</span><br><span class="line">|  <span class="number">127</span> |      <span class="number">4</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">27</span> <span class="number">11</span>:<span class="number">05</span>:<span class="number">08</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">27</span> <span class="number">11</span>:<span class="number">24</span>:<span class="number">01</span> |</span><br><span class="line">|  <span class="number">127</span> |      <span class="number">5</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">28</span> <span class="number">02</span>:<span class="number">19</span>:<span class="number">31</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">28</span> <span class="number">02</span>:<span class="number">26</span>:<span class="number">01</span> |</span><br><span class="line">|  <span class="number">127</span> |      <span class="number">6</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">29</span> <span class="number">04</span>:<span class="number">25</span>:<span class="number">57</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">29</span> <span class="number">04</span>:<span class="number">44</span>:<span class="number">02</span> |</span><br><span class="line">|  <span class="number">127</span> |      <span class="number">7</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">29</span> <span class="number">06</span>:<span class="number">20</span>:<span class="number">15</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">29</span> <span class="number">06</span>:<span class="number">20</span>:<span class="number">15</span> |</span><br><span class="line">|  <span class="number">127</span> |      <span class="number">8</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">29</span> <span class="number">09</span>:<span class="number">16</span>:<span class="number">11</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">29</span> <span class="number">09</span>:<span class="number">30</span>:<span class="number">01</span> |</span><br><span class="line">|  <span class="number">127</span> |      <span class="number">9</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">29</span> <span class="number">10</span>:<span class="number">05</span>:<span class="number">10</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">29</span> <span class="number">10</span>:<span class="number">31</span>:<span class="number">02</span> |</span><br><span class="line">|  <span class="number">127</span> |     <span class="number">10</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">29</span> <span class="number">10</span>:<span class="number">46</span>:<span class="number">27</span> | <span class="number">2008</span>-<span class="number">09</span>-<span class="number">29</span> <span class="number">10</span>:<span class="number">49</span>:<span class="number">02</span> |</span><br><span class="line">+------+--------+---------------------+---------------------+</span><br></pre></td></tr></table></figure></p>
<h4 id="轨迹展示">轨迹展示</h4><p>有了上面的数据支持，我们借助百度地图的接口，就能够很轻松的将这些轨迹绘制出来。访问 <a href="http://localhost:8080/GpsDemo/index.html" target="_blank" rel="external">http://localhost:8080/GpsDemo/index.html</a>   。这个页面显示的是原始点绘制的路径。<br><img src="http://7punic.com1.z0.glb.clouddn.com/99bfab70-5071-11e5-815b-0d9e9dbaa5ec.png" alt=""></p>
<p>如果要显示划分区域之后的路径，可以访问这个页面 <a href="http://localhost:8080/GpsDemo/index0.html" target="_blank" rel="external">http://localhost:8080/GpsDemo/index0.html</a>  。<br>效果图<br><img src="http://7punic.com1.z0.glb.clouddn.com/a35f5a90-5071-11e5-815b-0d9e9dbaa5ec.png" alt=""></p>
<p>换到智驾小V用户的后台数据，在<code>edu.dcy.servlet.GetAreaData</code>中进行数据库表的切换，里面有详尽注释。<br><img src="http://7punic.com1.z0.glb.clouddn.com/b64ca130-5071-11e5-815b-0d9e9dbaa5ec.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="代码结构">代码结构</h3><p><img src="http://needpp.qiniudn.com/2015/09/01/ba63550f-5079-11e5-aa5e-87176098b650.jpg" alt=""></p>
<h3 id="数据预处理">数据预处理</h3><p>1.清洗数据<br>通过服务器返回的数据，包含许多冗余的数据，我们需要对其进行抽取，转换成我们需要的数据。<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">getAllUserData</span><span class="params">(String inpath, String opath)</span></span></span><br></pre></td></tr></table></figure></p>
<p>将从服务器获取的json字符串进行清洗、换行成结构化数据。格式如下。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">8566965</span>,<span class="number">1.438734627E9</span>,<span class="number">2015</span>-<span class="number">08</span>-<span class="number">05</span> <span class="number">08</span>:<span class="number">30</span>:<span class="number">27</span>,<span class="number">113.930632</span>,<span class="number">22.541371</span></span><br><span class="line"><span class="number">8566965</span>,<span class="number">1.438734647E9</span>,<span class="number">2015</span>-<span class="number">08</span>-<span class="number">05</span> <span class="number">08</span>:<span class="number">30</span>:<span class="number">47</span>,<span class="number">113.930609</span>,<span class="number">22.541398</span></span><br><span class="line"><span class="number">8566965</span>,<span class="number">1.438734667E9</span>,<span class="number">2015</span>-<span class="number">08</span>-<span class="number">05</span> <span class="number">08</span>:<span class="number">31</span>:<span class="number">07</span>,<span class="number">113.930603</span>,<span class="number">22.541400</span></span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="gps" scheme="http://needpp.com/tags/gps/"/>
    
      <category term="ml" scheme="http://needpp.com/tags/ml/"/>
    
      <category term="model" scheme="http://needpp.com/tags/model/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[markdown编辑器]]></title>
    <link href="http://needpp.com/2015/07/01/markdown%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    <id>http://needpp.com/2015/07/01/markdown编辑器/</id>
    <published>2015-07-01T04:38:40.000Z</published>
    <updated>2015-11-28T05:11:38.425Z</updated>
    <content type="html"><![CDATA[<p>使用七牛作图床，迁移至静态博客后贴图太麻烦，需要上传图片到图床，然后把链接复制回文件进行引用。简直就是浪费绳命！</p>
<p>于是，折腾！ 找到轮子改造之…</p>
<p>添加新特征： 粘贴图片 – &gt; 七牛云 –&gt; 引用</p>
<p><img src="http://7punic.com1.z0.glb.clouddn.com/0de23c00-1fff-11e5-a6a9-b5862c47e4ba.png" alt=""></p>
<p>毕！</p>
<p>轮子：</p>
<ul>
<li><a href="https://github.com/dcycome/Mango" target="_blank" rel="external">Mango</a></li>
<li><a href="http://benq.im/2015/04/28/hexomd-05/" target="_blank" rel="external">骑兵程序员</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>使用七牛作图床，迁移至静态博客后贴图太麻烦，需要上传图片到图床，然后把链接复制回文件进行引用。简直就是浪费绳命！</p>
<p>于是，折腾！ 找到轮子改造之…</p>
<p>添加新特征： 粘贴图片 – &gt; 七牛云 –&gt; 引用</p>
<p><img src="h]]>
    </summary>
    
      <category term="markdown" scheme="http://needpp.com/tags/markdown/"/>
    
      <category term="tools" scheme="http://needpp.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[细思恐极]]></title>
    <link href="http://needpp.com/2015/06/30/%E7%BB%86%E6%80%9D%E6%81%90%E6%9E%81/"/>
    <id>http://needpp.com/2015/06/30/细思恐极/</id>
    <published>2015-06-30T06:35:52.000Z</published>
    <updated>2015-11-28T05:11:38.437Z</updated>
    <content type="html"><![CDATA[<p>华丽的分割线</p>
<hr>
<p><img src="http://7punic.com1.z0.glb.clouddn.com/dvl2y5iqq3v504yx6vzyj5gcle.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>华丽的分割线</p>
<hr>
<p><img src="http://7punic.com1.z0.glb.clouddn.com/dvl2y5iqq3v504yx6vzyj5gcle.png" alt=""></p>
]]>
    </summary>
    
      <category term="life" scheme="http://needpp.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[起风了]]></title>
    <link href="http://needpp.com/2015/06/30/%E8%B5%B7%E9%A3%8E%E4%BA%86/"/>
    <id>http://needpp.com/2015/06/30/起风了/</id>
    <published>2015-06-29T16:00:00.000Z</published>
    <updated>2015-11-28T05:11:38.437Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7punic.com1.z0.glb.clouddn.com/y69mc5l7fpjbgr0vh3dty6o0i1.png" alt=""></p>
<p>风起了，唯有努力生存！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7punic.com1.z0.glb.clouddn.com/y69mc5l7fpjbgr0vh3dty6o0i1.png" alt=""></p>
<p>风起了，唯有努力生存！</p>
]]>
    </summary>
    
      <category term="life" scheme="http://needpp.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[十分钟搭建个人博客]]></title>
    <link href="http://needpp.com/2015/06/30/%E5%8D%81%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://needpp.com/2015/06/30/十分钟搭建个人博客/</id>
    <published>2015-06-29T16:00:00.000Z</published>
    <updated>2015-12-14T09:54:14.572Z</updated>
    <content type="html"><![CDATA[<p>无需过多关注与页面设计，只需要关注与内容的编写。采用markdown编写，然后解析成html，再有主题渲染。托管到静态空间，ok。</p>
<h3 id="准备工具">准备工具</h3><ul>
<li>nodejs安装包</li>
<li>hexo</li>
<li>git</li>
</ul>
<h3 id="配置nodejs">配置nodejs</h3><p>在官网下载二进制安装包，下载适合自己系统的对应安装包，我这里是linux64bit。<br>下载地址  <a href="https://nodejs.org/download/" target="_blank" rel="external">https://nodejs.org/download/</a><br>下面操作在shell终端进行<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##解压</span></span><br><span class="line">tar -zxvf  nodejs-<span class="number">64</span>.tar.gz </span><br><span class="line"><span class="comment">##添加到环境变量 sudo vim /etc/profile</span></span><br><span class="line">在配置文件中添加这两行，这里的路径名称根据实际情况进行更改,然后保存并且退出</span><br><span class="line"><span class="built_in">export</span> NODEJS_HOME=/home/spark/soft/nodejs</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$NODEJS_HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">##对更改的配置文件 使之重新生效</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></p>
<p>在终端输入如下命令， 检查是否安装成功。<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">spark<span class="variable">@master</span><span class="symbol">:~/soft</span><span class="variable">$ </span>node -v</span><br><span class="line">v<span class="number">0</span>.<span class="number">12.7</span></span><br><span class="line">spark<span class="variable">@master</span><span class="symbol">:~/soft</span><span class="variable">$ </span>npm -v</span><br><span class="line"><span class="number">1.3</span>.<span class="number">10</span></span><br><span class="line">spark<span class="variable">@master</span><span class="symbol">:~/soft</span>$</span><br></pre></td></tr></table></figure></p>
<p>至此，nodejs安装完成。 </p>
<a id="more"></a>
<h3 id="安装hexo">安装hexo</h3><p>关于hexo的文档很多，可以参考官网。<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">https://hexo.io/zh-cn/</a><br>这里的具体步骤可以参考下面：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#全局安装hexo command  ，可能会使用sudo权限</span></span><br><span class="line">sudo npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化自己的博客目录</span></span><br><span class="line">hexo init myblog</span><br><span class="line"></span><br><span class="line"><span class="comment">#进入到myblog目录,进行依赖包的安装</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></p>
<p>上面步骤完成之后，我们可以看到myblog下的目录结构是这样的</p>
<p><img src="http://7punic.com1.z0.glb.clouddn.com/0881f660-33aa-11e5-8e28-4b1299df4838.png" alt=""></p>
<p>其中_configl.xml 是主要的配置文件，node_modules下是自动安装的依赖包。这些依赖的包的依赖关系由package.json来指定。scaffolds下是每种布局新建时候的模板。soucece下是我们真正负责维护的markdown文件，最终由这些文件来生成静态页面。</p>
<p>###生成静态博客<br>切换到myblog的根目录，执行生成静态博客的命令。<br><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="title">hexo</span> g</span><br></pre></td></tr></table></figure></p>
<p><img src="http://7punic.com1.z0.glb.clouddn.com/e6126410-33aa-11e5-8e28-4b1299df4838.png" alt=""></p>
<p>会在public目录下生成整个静态博客的页面。此时可以在本地启动服务，然后在浏览器进行访问。</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="title">hexo</span> s</span><br></pre></td></tr></table></figure>
<p>执行完之后，然后在浏览器就可以看到自己的博客了。。。</p>
<h3 id="关于主题">关于主题</h3><p>主题是可以切换的，只需要在 _config.yml 里面的主题目录进行修改你想要设置的主题，需要保证名字和theme下的名字一样。</p>
<h3 id="关于自动部署">关于自动部署</h3><p>托管到github，在上面建立一个自己用户名+github.io 的仓库，比如xxx.github.io.<br>然后在_config.yml 的deploy节点进行仓库地址的添加。<br>这里需要将xxx替换成自己的用户名<br><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repository</span>: <span class="attribute">https</span>:<span class="comment">//github.com/<span class="label">xxx/myblog.git</span></span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure></p>
<h3 id="附录">附录</h3><p>我的配置<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: http://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"># Site</span><br><span class="line">title: Thinkml's blog</span><br><span class="line">subtitle: happy wife, happy life...</span><br><span class="line">description: happy wife, happy life...</span><br><span class="line">author: thinkml</span><br><span class="line">language:</span><br><span class="line">timezone:</span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, <span class="operator"><span class="keyword">set</span> <span class="keyword">url</span> <span class="keyword">as</span> <span class="string">'http://yoursite.com/child'</span> <span class="keyword">and</span> root <span class="keyword">as</span> <span class="string">'/child/'</span></span><br><span class="line"><span class="keyword">url</span>: <span class="keyword">http</span>://needpp.com</span><br><span class="line">root: /</span><br><span class="line">permalink: :<span class="keyword">year</span>/:<span class="keyword">month</span>/:<span class="keyword">day</span>/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"># <span class="keyword">Directory</span></span><br><span class="line">source_dir: <span class="keyword">source</span></span><br><span class="line">public_dir: <span class="keyword">public</span></span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # <span class="keyword">File</span> <span class="keyword">name</span> <span class="keyword">of</span> <span class="keyword">new</span> posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: <span class="literal">false</span> # Transform title <span class="keyword">into</span> titlecase</span><br><span class="line">external_link: <span class="literal">true</span> # <span class="keyword">Open</span> <span class="keyword">external</span> links <span class="keyword">in</span> <span class="keyword">new</span> tab</span><br><span class="line">filename_case: <span class="number">0</span></span><br><span class="line">render_drafts: <span class="literal">false</span></span><br><span class="line">post_asset_folder: <span class="literal">false</span></span><br><span class="line">relative_link: <span class="literal">false</span></span><br><span class="line">future: <span class="literal">true</span></span><br><span class="line">highlight:</span><br><span class="line">  <span class="keyword">enable</span>: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">false</span></span><br><span class="line">  auto_detect: <span class="literal">true</span></span><br><span class="line">  tab_replace:</span><br><span class="line"># <span class="keyword">Category</span> &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"># <span class="built_in">Date</span> / <span class="keyword">Time</span> <span class="keyword">format</span></span><br><span class="line">## Hexo uses Moment.js <span class="keyword">to</span> <span class="keyword">parse</span> <span class="keyword">and</span> display <span class="built_in">date</span></span><br><span class="line">## You can customize the <span class="built_in">date</span> <span class="keyword">format</span> <span class="keyword">as</span> defined <span class="keyword">in</span></span><br><span class="line">## <span class="keyword">http</span>://momentjs.com/docs/#/displaying/<span class="keyword">format</span>/</span><br><span class="line"><span class="keyword">date_format</span>: YYYY-MM-DD</span><br><span class="line"><span class="keyword">time_format</span>: HH:mm:ss</span><br><span class="line"># Pagination</span><br><span class="line">## <span class="keyword">Set</span> per_page <span class="keyword">to</span> <span class="number">0</span> <span class="keyword">to</span> <span class="keyword">disable</span> pagination</span><br><span class="line">per_page: <span class="number">10</span></span><br><span class="line">pagination_dir: page</span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: <span class="keyword">http</span>://hexo.io/plugins/</span><br><span class="line">plugins:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line">- hexo-generator-sitemap</span><br><span class="line">## Themes: <span class="keyword">http</span>://hexo.io/themes/</span><br><span class="line">theme: yilia</span><br><span class="line"># Deployment</span><br><span class="line">## Docs: <span class="keyword">http</span>://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">    <span class="keyword">type</span>: git</span><br><span class="line">    message: <span class="string">""</span></span><br><span class="line">    repo: </span><br><span class="line">        github: git@github.com:dcycome/dcycome.github.io.git,<span class="keyword">master</span></span><br><span class="line">        gitcafe: git@gitcafe.com:thinkml/myblog.git,gitcafe-pages</span></span><br></pre></td></tr></table></figure></p>
<h3 id="更新（快速配置方式）">更新（快速配置方式）</h3><p>请参考<a href="https://nodejs.org/en/download/package-manager/" target="_blank" rel="external">这里</a>.</p>
<p>NOTE: If you are using Ubuntu Precise or Debian Wheezy, you might want to read about running Node.js &gt;= 4.x on older distros.</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">curl -sL http<span class="variable">s:</span>//<span class="keyword">deb</span>.nodesource.<span class="keyword">com</span>/setup_4.<span class="keyword">x</span> | sudo -E bash -</span><br><span class="line">sudo apt-<span class="built_in">get</span> install -<span class="keyword">y</span> nodejs</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>无需过多关注与页面设计，只需要关注与内容的编写。采用markdown编写，然后解析成html，再有主题渲染。托管到静态空间，ok。</p>
<h3 id="准备工具">准备工具</h3><ul>
<li>nodejs安装包</li>
<li>hexo</li>
<li>git</li>
</ul>
<h3 id="配置nodejs">配置nodejs</h3><p>在官网下载二进制安装包，下载适合自己系统的对应安装包，我这里是linux64bit。<br>下载地址  <a href="https://nodejs.org/download/">https://nodejs.org/download/</a><br>下面操作在shell终端进行<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##解压</span></span><br><span class="line">tar -zxvf  nodejs-<span class="number">64</span>.tar.gz </span><br><span class="line"><span class="comment">##添加到环境变量 sudo vim /etc/profile</span></span><br><span class="line">在配置文件中添加这两行，这里的路径名称根据实际情况进行更改,然后保存并且退出</span><br><span class="line"><span class="built_in">export</span> NODEJS_HOME=/home/spark/soft/nodejs</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$NODEJS_HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">##对更改的配置文件 使之重新生效</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></p>
<p>在终端输入如下命令， 检查是否安装成功。<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">spark<span class="variable">@master</span><span class="symbol">:~/soft</span><span class="variable">$ </span>node -v</span><br><span class="line">v<span class="number">0</span>.<span class="number">12.7</span></span><br><span class="line">spark<span class="variable">@master</span><span class="symbol">:~/soft</span><span class="variable">$ </span>npm -v</span><br><span class="line"><span class="number">1.3</span>.<span class="number">10</span></span><br><span class="line">spark<span class="variable">@master</span><span class="symbol">:~/soft</span>$</span><br></pre></td></tr></table></figure></p>
<p>至此，nodejs安装完成。 </p>]]>
    
    </summary>
    
      <category term="myblog" scheme="http://needpp.com/tags/myblog/"/>
    
      <category term="share" scheme="http://needpp.com/tags/share/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[临时存储]]></title>
    <link href="http://needpp.com/2015/06/29/%E4%B8%B4%E6%97%B6%E5%AD%98%E5%82%A8/"/>
    <id>http://needpp.com/2015/06/29/临时存储/</id>
    <published>2015-06-28T16:00:00.000Z</published>
    <updated>2015-12-15T14:47:32.618Z</updated>
    <content type="html"><![CDATA[<p>保存临时链接</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>保存临时链接</p>
]]>
    </summary>
    
      <category term="temp" scheme="http://needpp.com/tags/temp/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[数学公式测试]]></title>
    <link href="http://needpp.com/2015/06/25/mathjax/"/>
    <id>http://needpp.com/2015/06/25/mathjax/</id>
    <published>2015-06-25T06:35:52.000Z</published>
    <updated>2015-12-15T14:43:39.663Z</updated>
    <content type="html"><![CDATA[<p>$$ x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$</p>
<p>update !</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>$$ x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$</p>
<p>update !</p>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[科学上网备忘]]></title>
    <link href="http://needpp.com/2015/06/08/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <id>http://needpp.com/2015/06/08/科学上网/</id>
    <published>2015-06-07T16:00:00.000Z</published>
    <updated>2015-11-29T15:06:53.627Z</updated>
    <content type="html"><![CDATA[<p>优选服务器:<br>(自动优选, 不定期更换, 请使用域名为服务器地址.)<br>IPv4: auto.v4.omicronplus.com<br>IPv6: auto.v6.omicronplus.com<br>加密方法: aes-256-cfb<br>端口: 4000<br>密码: <em>**</em></p>
<p>欧洲服务器-1:<br>IPv4: eu1.v4.omicronplus.com<br>IPv6: eu1.v6.omicronplus.com<br>加密方法: aes-256-cfb<br>端口: 4000<br>密码: <em>**</em></p>
<p>使用指南</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">sslocal -s <span class="attribute">auto</span><span class="class">.v4</span><span class="class">.omicronplus</span><span class="class">.com</span> -<span class="tag">p</span> <span class="number">4000</span> -k pwd</span><br></pre></td></tr></table></figure>
<hr>
<p><code>lantern for window and linux</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>优选服务器:<br>(自动优选, 不定期更换, 请使用域名为服务器地址.)<br>IPv4: auto.v4.omicronplus.com<br>IPv6: auto.v6.omicronplus.com<br>加密方法: aes-256-cfb<br>端口: 4000<]]>
    </summary>
    
      <category term="ss" scheme="http://needpp.com/tags/ss/"/>
    
      <category term="tools" scheme="http://needpp.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[多服务器间如何共享session]]></title>
    <link href="http://needpp.com/2015/05/25/%E5%A4%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%97%B4%E5%A6%82%E4%BD%95%E5%85%B1%E4%BA%ABsession/"/>
    <id>http://needpp.com/2015/05/25/多服务器间如何共享session/</id>
    <published>2015-05-24T16:00:00.000Z</published>
    <updated>2015-12-15T14:48:23.542Z</updated>
    <content type="html"><![CDATA[<p>留空 ~~~</p>
<hr>
<p> 华丽的分割线。。。。。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>留空 ~~~</p>
<hr>
<p> 华丽的分割线。。。。。</p>
]]>
    </summary>
    
      <category term="linux" scheme="http://needpp.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[决策树、CART、GBRT、Adaboost]]></title>
    <link href="http://needpp.com/2015/05/25/%E5%86%B3%E7%AD%96%E6%A0%91%E3%80%81CART%E3%80%81GBRT%E3%80%81Adaboost/"/>
    <id>http://needpp.com/2015/05/25/决策树、CART、GBRT、Adaboost/</id>
    <published>2015-05-24T16:00:00.000Z</published>
    <updated>2015-12-15T14:48:06.730Z</updated>
    <content type="html"><![CDATA[<p>决策树是以实例为基础的归纳学习算法。 它从一组无次序、无规则的元组中推理出决策树表示形式的分类规则。它采用自顶向下的递归方式，在决策树的内部结点进行属性值的比较，并根据不同的属性值从该结点向下分支，叶结点是要学习划分的类。从根到叶结点的一条路径就对应着一条合取规则，整个决策树就对应着一组析取表达式规则。<br><a id="more"></a></p>
<h3 id="ID3算法"><a href="http://dataunion.org/13680.html" target="_blank" rel="external">ID3算法</a></h3><p>ID3算法的优点是：算法的理论清晰，方法简单，学习能力较强。<br>ID3算法的缺点是：只对比较小的数据集有效，且对<code>噪声比较敏感</code>，当训练数据集加大时，决策树可能会随之改变</p>
<h3 id="C4-5"><a href="http://dataunion.org/13526.html" target="_blank" rel="external">C4.5</a></h3><p>C4.5是机器学习算法中的另一个分类决策树算法，它是基于ID3算法进行改进后的一种重要算法，相比于ID3算法，改进有如下几个要点：</p>
<ul>
<li>ID3选择属性用的是子树的信息增益，而C4.5用的是信息增益率。</li>
<li>在决策树构造过程中进行剪枝，因为某些具有很少元素的结点可能会使构造的决策树过适应（Overfitting），如果不考虑这些结点可能会更好。</li>
<li>对非离散数据也能处理。</li>
<li>能够对不完整数据进行处理。</li>
</ul>
<p>C4.5算法的优点是：产生的分类规则易于理解，准确率较高。<br>C4.5算法的缺点是：在构造树的过程中，需要对数据集进行多次的顺序扫描和排序，因而导致算法的低效。</p>
<p><code>信息增益比率</code>度量是用ID3算法中的的增益度量Gain(D，X)和分裂信息度量SplitInformation(D，X)来共同定义的。分裂信息度量SplitInformation(D，X）就相当于特征X（取值为x1，x2，……，xn，各自的概率为P1，P2，…，Pn，Pk就是样本空间中特征X取值为xk的数量除上该样本空间总数）的熵。<br>SplitInformation(D，X） = -P1 log2(P1)-P2 log2(P)-,…,-Pn log2(Pn)<br>GainRatio(D,X) = Gain(D,X)/SplitInformation(D,X)<br>在ID3中用信息增益选择属性时偏向于选择分枝比较多的属性值，即取值多的属性，在C4.5中由于除以SplitInformation(D,X)=H(X)，可以削弱这种作用。<br>另外<a href="http://blog.sina.com.cn/s/blog_60acd6780100djcf.html" target="_blank" rel="external">C4.5能够处理连续型属性</a>。而ID3只能处理离散型属性。</p>
<p>处理连续型属性过程</p>
<ol>
<li>对属性的取值进行排序</li>
<li>两个属性取值之间的中点作为可能的分裂点，将数据集分成两部分，计算每个可能的分裂点的信息增益（InforGain）</li>
<li>对每个分裂点的信息增益(InforGain)就行修正：减去log2(N-1)/|D|</li>
<li>选择修正后信息增益(InforGain)最大的，分裂点作为该属性的<code>最佳分裂点</code></li>
<li>计算最佳分裂点的信息增益率（Gain Ratio）作为属性的Gain Ratio</li>
<li>选择Gain Ratio最大的属性作为<code>最佳分裂属性</code></li>
</ol>
<h3 id="CART分类回归树"><a href="http://dataunion.org/5771.html" target="_blank" rel="external">CART分类回归树</a></h3><p>分类树：二分（简化决策树规模，提高运行效率）、GINI指数最小特征作为划分节点。  GINI值越小，表明样本的纯净度越高（即该样本只属于同一类的概率越高）。<br>回归树：CART则使用最小剩余方差(Squared Residuals Minimization)来决定Regression Tree的最优划分，该划分准则是<code>期望划分之后的子树误差方差最小</code>。</p>
<p>针对连续值处理参照c4.5做法，需要注意的地方是：<br>根据<code>离散特征分支划分数据集时，子数据集中不再包含该特征</code>（因为每个分支下的子数据集该特征的取值就会是一样的，信息增益或者Gini Gain将不再变化）；而根据连续特征分支时，各分支下的子数据集必须依旧包含该特征（当然，左右分支各包含的分别是取值小于、大于等于分裂值的子数据集），因为该连续特征再接下来的树分支过程中可能依旧起着决定性作用。</p>
<p>关于减枝–补充。。。。</p>
<h3 id="随机森林"><a href="http://dataunion.org/12046.html" target="_blank" rel="external">随机森林</a></h3><p>随机的方式建立一个森林，森林里面有很多的决策树组成，随机森林的每一棵决策树之间是没有关联的。随机森林是一种统计学习理论，其随机有两个方面：首先是在训练的每一轮中，都是对原始样本集有放回的抽取固定数目的样本点，形成k个互不相同的样本集。第二点是：对于每一个决策树的建立是从总的属性中随机抽取一定量的属性作分裂属性集，这样对于k个树分类器均是不相同的。由随机生成的k个决策树组成了随机森林。对于每一个决策树来讲，其分裂属性是不断的选取具有最大信息增益的属性进行排列。整个随机森林建立后，最终的分类标准采用投票机制得到可能性最高的结果。<br>下图是随机森林构建的过程：</p>
<p><img src="http://needpp.qiniudn.com/2015/05/25/71347a0c-02c2-11e5-9c7f-a12adcdca7aa.jpg" alt=""></p>
<p>随机森林优点：<br>1.通过对许多分类器进行组合，它可以产生高准确度的分类器；<br>2.它可以处理大量的输入变量；<br>3.它可以在决定类别时，评估变量的重要性；<br>4.在建造森林时，它可以在内部对于一般化后的误差产生不偏差的估计；<br>5.它包含一个好方法可以估计遗失的资料，并且，如果有很大一部分的资料遗失，仍可以维持准确度。<br>6.它提供一个实验方法，可以去侦测变量之间的相互作用；<br>7.学习过程是很快速的；<br>8.<code>对异常值和噪声具有很好的容忍度，且不容易出现过拟合</code>；<br>随机森林的缺点：<br>1.对于有不同级别的属性的数据，级别划分较多的属性会对随机森林产生更大的影响，所以随机森林在这种数据上产出的属性权值是不可信的；<br>2.单棵决策树的预测效果很差：由于随机选择属性，使得单棵决策树的预测效果很差。</p>
<h3 id="AdaBoost"><a href="http://dataunion.org/5341.html" target="_blank" rel="external">AdaBoost</a></h3><p>l</p>
<h3 id="GBRT"><a href="http://dataunion.org/5341.html" target="_blank" rel="external">GBRT</a></h3><p>l</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>决策树是以实例为基础的归纳学习算法。 它从一组无次序、无规则的元组中推理出决策树表示形式的分类规则。它采用自顶向下的递归方式，在决策树的内部结点进行属性值的比较，并根据不同的属性值从该结点向下分支，叶结点是要学习划分的类。从根到叶结点的一条路径就对应着一条合取规则，整个决策树就对应着一组析取表达式规则。<br>]]>
    
    </summary>
    
      <category term="boost" scheme="http://needpp.com/tags/boost/"/>
    
      <category term="gbrt" scheme="http://needpp.com/tags/gbrt/"/>
    
      <category term="ml" scheme="http://needpp.com/tags/ml/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[天猫移动推荐竞赛s1]]></title>
    <link href="http://needpp.com/2015/05/15/%E5%A4%A9%E7%8C%AB%E7%A7%BB%E5%8A%A8%E6%8E%A8%E8%8D%90%E7%AB%9E%E8%B5%9Bs1/"/>
    <id>http://needpp.com/2015/05/15/天猫移动推荐竞赛s1/</id>
    <published>2015-05-14T16:00:00.000Z</published>
    <updated>2015-12-12T03:15:05.419Z</updated>
    <content type="html"><![CDATA[<h3 id="create_table">create table</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">create <span class="tag">table</span> t(</span><br><span class="line">uid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">type int ,</span><br><span class="line">ugeo <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">10</span>)</span></span>,</span><br><span class="line">icg <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="tag">time</span> date</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">create <span class="tag">table</span> item(</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">igeo <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">10</span>)</span></span>,</span><br><span class="line">icg <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="load_data">load data</h3><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">mysql -<span class="keyword">u</span> root -p tianchi2 --<span class="keyword">local</span>-<span class="keyword">infile</span>=1 -<span class="keyword">e</span> 'load data <span class="keyword">local</span> <span class="keyword">infile</span> <span class="string">"/home/spark/data/ali/user.csv"</span> into <span class="keyword">table</span> user fields terminated <span class="keyword">by</span> <span class="string">","</span> lines terminated <span class="keyword">by</span> <span class="string">"\n"</span>'</span><br><span class="line"> </span><br><span class="line">mysql -<span class="keyword">u</span> root -p tianchi2 --<span class="keyword">local</span>-<span class="keyword">infile</span>=1 -<span class="keyword">e</span> 'load data <span class="keyword">local</span> <span class="keyword">infile</span> <span class="string">"/home/spark/data/ali/item.csv"</span> into <span class="keyword">table</span> item fields terminated <span class="keyword">by</span> <span class="string">","</span> lines terminated <span class="keyword">by</span> <span class="string">"\n"</span>'</span><br></pre></td></tr></table></figure>
<h3 id="bulid_train_set_and_test_set">bulid train set and test set</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> train(</span><br><span class="line">uid <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line">iid <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line"><span class="keyword">type</span> <span class="built_in">int</span> ,</span><br><span class="line">ugeo <span class="built_in">varchar</span>(<span class="number">10</span>),</span><br><span class="line">icg <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line"><span class="keyword">time</span> <span class="built_in">date</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> train <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">time</span> &gt;<span class="string">'2014-12-12'</span> <span class="keyword">and</span> <span class="keyword">time</span> &lt; <span class="string">'2014-12-18'</span> ;</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">test</span>(</span><br><span class="line">uid <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line">iid <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line"><span class="keyword">type</span> <span class="built_in">int</span> ,</span><br><span class="line">ugeo <span class="built_in">varchar</span>(<span class="number">10</span>),</span><br><span class="line">icg <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line"><span class="keyword">time</span> <span class="built_in">date</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">time</span> =<span class="string">'2014-12-18'</span> ;</span></span><br></pre></td></tr></table></figure>
<h3 id="统计点击_收藏_购物车_购买次数">统计点击 收藏 购物车 购买次数</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#gen train <span class="operator"><span class="keyword">set</span></span><br><span class="line"><span class="keyword">select</span> uid,iid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">3</span> thencreate <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">uid <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line">iid <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line"><span class="keyword">type</span> <span class="built_in">int</span> ,</span><br><span class="line">ugeo <span class="built_in">varchar</span>(<span class="number">10</span>),</span><br><span class="line">icg <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line"><span class="keyword">time</span> <span class="built_in">date</span></span><br><span class="line">) <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">c</span> ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">d</span> ,</span><br><span class="line"><span class="keyword">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">e</span></span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/train.csv'</span> </span><br><span class="line"><span class="keyword">from</span> train <span class="keyword">group</span> <span class="keyword">by</span> uid,iid </span><br><span class="line"></span><br><span class="line">#gen <span class="keyword">validate</span> <span class="keyword">set</span></span><br><span class="line"><span class="keyword">select</span> uid,iid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">c</span> ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">d</span> ,</span><br><span class="line"><span class="keyword">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">e</span></span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/test.csv'</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,iid </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##gen user_item pair <span class="keyword">to</span> predict <span class="keyword">and</span> <span class="keyword">then</span> submit <span class="keyword">to</span> the website <span class="keyword">to</span> <span class="keyword">test</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> uid,iid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">c</span> ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">d</span> </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/pre_submit.txt'</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">time</span>&gt;=<span class="string">'2014-12-15'</span> <span class="keyword">and</span> <span class="keyword">time</span>&lt;<span class="string">'2014-12-18'</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,iid</span></span><br></pre></td></tr></table></figure>
<h3 id="new_way">new way</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">##bulid train <span class="operator"><span class="keyword">set</span> <span class="keyword">from</span> <span class="number">13</span>-<span class="number">17</span> <span class="keyword">days</span></span><br><span class="line"><span class="keyword">select</span> uid,iid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">c</span> ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">d</span> ,</span><br><span class="line"><span class="keyword">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">e</span></span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/train.txt'</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">time</span>&gt;=<span class="string">'2014-12-13'</span> <span class="keyword">and</span> <span class="keyword">time</span>&lt;=<span class="string">'2014-12-17'</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,iid ;</span></span><br><span class="line"></span><br><span class="line">##build test <span class="operator"><span class="keyword">set</span> <span class="keyword">from</span> <span class="number">18</span></span><br><span class="line"><span class="keyword">select</span> uid,iid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">c</span> ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">d</span> ,</span><br><span class="line"><span class="keyword">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">e</span></span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/test.txt'</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">time</span>=<span class="string">'2014-12-18'</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,iid ;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">create <span class="tag">table</span> t(</span><br><span class="line">uid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="tag">a</span> int,</span><br><span class="line"><span class="tag">b</span> int,</span><br><span class="line">c int,</span><br><span class="line">d int,</span><br><span class="line">e int</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">mysql -u root -<span class="tag">p</span> tianchi --lcreate <span class="tag">table</span> user(</span><br><span class="line">uid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">type int ,</span><br><span class="line">ugeo <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">10</span>)</span></span>,</span><br><span class="line">icg <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="tag">time</span> date</span><br><span class="line">)ocal-infile=<span class="number">1</span> -e <span class="string">'load data local infile "/home/spark/user_item_togen.txt" into table t fields terminated by "\t" lines terminated by "\n"'</span></span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">select</span> uid,iid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">c</span> ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">type</span>=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">d</span> </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/group.txt'</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,iid ;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">create <span class="tag">table</span> tem(</span><br><span class="line">uid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">type int ,</span><br><span class="line">ugeo <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">10</span>)</span></span>,</span><br><span class="line">icg <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="tag">time</span> date</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql -u root -<span class="tag">p</span> tianchi --local-infile=<span class="number">1</span> -e <span class="string">'load data local infile "/home/spark/result.txt" into table tem fields terminated by "\t" lines terminated by "\n"'</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="create_table">create table</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">create <span class="tag">table</span> t(</span><br><span class="line">uid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">type int ,</span><br><span class="line">ugeo <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">10</span>)</span></span>,</span><br><span class="line">icg <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="tag">time</span> date</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">create <span class="tag">table</span> item(</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">igeo <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">10</span>)</span></span>,</span><br><span class="line">icg <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="dm" scheme="http://needpp.com/tags/dm/"/>
    
      <category term="tmall" scheme="http://needpp.com/tags/tmall/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[IJCAI2015重复购买用户预测]]></title>
    <link href="http://needpp.com/2015/04/30/IJCAI2015%E9%87%8D%E5%A4%8D%E8%B4%AD%E4%B9%B0%E7%94%A8%E6%88%B7%E9%A2%84%E6%B5%8B/"/>
    <id>http://needpp.com/2015/04/30/IJCAI2015重复购买用户预测/</id>
    <published>2015-04-29T16:00:00.000Z</published>
    <updated>2015-12-15T14:43:19.747Z</updated>
    <content type="html"><![CDATA[<h3 id="create_table">create table</h3><p>首先创建一个数据库表<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">#字段含义分别为 用户id 商品id 类别id 卖家id 品牌id 时间 操作行为</span><br><span class="line">create <span class="tag">table</span> big(</span><br><span class="line">uid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">cid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span> ,</span><br><span class="line">sid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">bid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="tag">time</span> int,</span><br><span class="line">action tinyint</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="id">#create</span> index on field `aciton` ...</span><br><span class="line">create index  index_action on <span class="function"><span class="title">big</span><span class="params">(action)</span></span></span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h3 id="load_data">load data</h3><p>导入数据到数据库，这部分可以不用细看<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">mysql -<span class="keyword">u</span> root -p tianchi2 --<span class="keyword">local</span>-<span class="keyword">infile</span>=1 -<span class="keyword">e</span> 'load data <span class="keyword">local</span> <span class="keyword">infile</span> <span class="string">"/home/spark/data/ali/user.csv"</span> into <span class="keyword">table</span> user fields terminated <span class="keyword">by</span> <span class="string">","</span> lines terminated <span class="keyword">by</span> <span class="string">"\n"</span>'</span><br><span class="line"> </span><br><span class="line">mysql -<span class="keyword">u</span> root -p bigdata --<span class="keyword">local</span>-<span class="keyword">infile</span>=1 -<span class="keyword">e</span> 'load data <span class="keyword">local</span> <span class="keyword">infile</span> <span class="string">"/home/spark/data/2015/data_format1/user_log_format1.csv"</span> into <span class="keyword">table</span> big fields terminated <span class="keyword">by</span> <span class="string">","</span> lines terminated <span class="keyword">by</span> <span class="string">"\n"</span>'</span><br></pre></td></tr></table></figure></p>
<h3 id="choose_data">choose data</h3><p>当前的工作主要是从数据库中进行分组查询 等到一些统计的特征进行分析，用到一些group by  ,sum,等操作。可以先了解一下是怎么个过程，具体使用可以先搁置在一边，现在主要是理解我做了写什么事情。理清整个脉络。<br><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line"><span class="comment">####数据格式，数据库里面的数据就是下面的这种形式 这是个示例</span></span><br><span class="line">mysql&gt; select <span class="keyword">*</span> from big limit 10;</span><br><span class="line">+--------+---------+------+------+------+------+--------+</span><br><span class="line">|<span class="string"> uid    </span>|<span class="string"> iid     </span>|<span class="string"> cid  </span>|<span class="string"> sid  </span>|<span class="string"> bid  </span>|<span class="string"> time </span>|<span class="string"> action </span>|</span><br><span class="line">+--------+---------+------+------+------+------+--------+</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 323294  </span>|<span class="string"> 833  </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 844400  </span>|<span class="string"> 1271 </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 575153  </span>|<span class="string"> 1271 </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 996875  </span>|<span class="string"> 1271 </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 1086186 </span>|<span class="string"> 1271 </span>|<span class="string"> 1253 </span>|<span class="string"> 1049 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 623866  </span>|<span class="string"> 1271 </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 542871  </span>|<span class="string"> 1467 </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 536347  </span>|<span class="string"> 1095 </span>|<span class="string"> 883  </span>|<span class="string"> 1647 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 364513  </span>|<span class="string"> 1271 </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 575153  </span>|<span class="string"> 1271 </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">+--------+---------+------+------+------+------+--------+</span><br></pre></td></tr></table></figure></p>
<p>1、统计用户对卖家点击、收藏、购物车、购买次数<br><code>注意，这里action行为字段的含义是0-点击，3-收藏，1-购物车、2-购买。下面也是如此。</code><br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#用户对卖家点击、收藏、购物车、购买次数</span><br><span class="line"><span class="operator"><span class="keyword">select</span> uid,<span class="keyword">sid</span>,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">0</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">c</span> ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">d</span> </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/uid-sid.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">big</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,<span class="keyword">sid</span> ;</span></span><br></pre></td></tr></table></figure></p>
<p>2、统计用户历史期间所有点击、收藏、购物车、购买次数<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#用户历史期间所有点击、收藏、购物车、购买次数</span><br><span class="line"><span class="operator"><span class="keyword">select</span> uid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">0</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">c</span> ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">d</span> </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/uid.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">big</span> <span class="keyword">group</span> <span class="keyword">by</span> uid;</span></span><br></pre></td></tr></table></figure></p>
<p>3、统计卖家历史期间店内商品被点击、收藏、购物车、购买次数<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">##卖家历史期间店内商品被点击、收藏、购物车、购买次数</span><br><span class="line"><span class="operator"><span class="keyword">select</span> <span class="keyword">sid</span>,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">0</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">c</span> ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">d</span> </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/sid.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">big</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> ;</span></span><br></pre></td></tr></table></figure></p>
<p>4、这里本来是想统计用户在某个店内对某个品牌的操作次数与在所有店内某个品牌操作次数的比值。sql不能一次完成 所以导出数据在python里面自己处理。这里对应是添加了两个统计特征 cid-pro和bid-pro<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#六个月内用户对品牌的操作次数</span><br><span class="line"><span class="operator"><span class="keyword">select</span> uid,bid,<span class="keyword">count</span>(*) </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/uid-bid.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">big</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,bid ;</span> </span><br><span class="line"></span><br><span class="line">#六个月内用户对某一个具体卖家中 所有品牌的操作次数</span><br><span class="line"><span class="operator"><span class="keyword">select</span> uid,<span class="keyword">sid</span>,bid,<span class="keyword">count</span>(*) </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/uid-sid-bid.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">big</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,<span class="keyword">sid</span>,bid ;</span> </span><br><span class="line"></span><br><span class="line">#六个月内用户对类别的操作次数</span><br><span class="line"><span class="operator"><span class="keyword">select</span> uid,cid,<span class="keyword">count</span>(*) </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/uid-cid.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">big</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,cid ;</span> </span><br><span class="line"></span><br><span class="line">#六个月内用户对某一个具体卖家中 类别的操作次数</span><br><span class="line"><span class="operator"><span class="keyword">select</span> uid,<span class="keyword">sid</span>,cid,<span class="keyword">count</span>(*) </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/uid-sid-cid.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">big</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,<span class="keyword">sid</span>,cid ;</span></span><br></pre></td></tr></table></figure></p>
<p>这部分代码可以先不用看 你知道有cid-pro、pid-pro就可以了<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">uid_sid_cid=pd.read_csv(<span class="string">"/home/spark/data/2015/data_format1/uid-sid-cid.csv"</span>,names=[<span class="string">'user_id'</span>,<span class="string">'merchant_id'</span>,<span class="string">'cid'</span>,<span class="string">'uid-sid-cid'</span>])</span><br><span class="line">uid_cid=pd.read_csv(<span class="string">"/home/spark/data/2015/data_format1/uid-cid.csv"</span>,names=[<span class="string">'user_id'</span>,<span class="string">'cid'</span>,<span class="string">'uid-cid'</span>])</span><br><span class="line">result=pd.merge(uid_sid_cid,uid_cid,on=[<span class="string">'user_id'</span>,<span class="string">'cid'</span>])</span><br><span class="line">result[<span class="string">'cid-pro'</span>]=result[<span class="string">'uid-sid-cid'</span>]/result[<span class="string">'uid-cid'</span>]</span><br><span class="line">result[[<span class="string">'user_id'</span>,<span class="string">'merchant_id'</span>,<span class="string">'cid-pro'</span>]].to_csv(<span class="string">"/home/spark/data/2015/data_format1/cid-pro.csv"</span>,index=<span class="keyword">False</span>)</span><br><span class="line"><span class="comment">#testreuslt.to_csv("/home/spark/data/2015/data_format1/test505.csv",index=False)</span></span><br><span class="line"></span><br><span class="line">uid_sid_bid=pd.read_csv(<span class="string">"/home/spark/data/2015/data_format1/uid-sid-bid.csv"</span>,names=[<span class="string">'user_id'</span>,<span class="string">'merchant_id'</span>,<span class="string">'bid'</span>,<span class="string">'uid-sid-bid'</span>])</span><br><span class="line">uid_bid=pd.read_csv(<span class="string">"/home/spark/data/2015/data_format1/uid-bid.csv"</span>,names=[<span class="string">'user_id'</span>,<span class="string">'bid'</span>,<span class="string">'uid-bid'</span>])</span><br><span class="line">result=pd.merge(uid_sid_bid,uid_bid,on=[<span class="string">'user_id'</span>,<span class="string">'bid'</span>])</span><br><span class="line">result[<span class="string">'bid-pro'</span>]=result[<span class="string">'uid-sid-bid'</span>]/result[<span class="string">'uid-bid'</span>]</span><br><span class="line">result[[<span class="string">'user_id'</span>,<span class="string">'merchant_id'</span>,<span class="string">'bid-pro'</span>]].to_csv(<span class="string">"/home/spark/data/2015/data_format1/bid-pro.csv"</span>,index=<span class="keyword">False</span>)</span><br><span class="line"><span class="comment">#testreuslt.to_csv("/home/spark/data/2015/data_format1/test505.csv",index=False)</span></span><br></pre></td></tr></table></figure></p>
<p>5、添加性别和年龄（从文本里面完成 没有用到数据库操作，这里不在描述过程）</p>
<hr>
<p>6、这个部分现在还没有添加。。。是准备要添加的属性。。。<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#重复购买次数</span><br><span class="line">spark@spark-desktop:~/data/2015/data_format1$ head -n 100 uid-sid.csv</span><br><span class="line">user_id,merchant_id,a,b,c,d</span><br><span class="line">1,1019,10,0,0,4</span><br><span class="line">1,1156,1,0,0,0</span><br><span class="line">1,2245,5,0,0,0</span><br><span class="line">1,4026,4,0,0,1</span><br><span class="line">1,4177,1,0,0,0</span><br><span class="line">1,4335,1,0,0,0</span><br><span class="line">1,471,1,0,0,0</span><br><span class="line">1,739,1,0,0,0</span><br><span class="line">1,925,3,0,0,1</span><br><span class="line">10,1364,13,1,0,5</span><br><span class="line">10,1454,9,0,0,0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">select</span> uid,iid,<span class="keyword">count</span>(*) </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/uid-iid-count.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">big</span> <span class="keyword">where</span> <span class="keyword">action</span>=<span class="number">2</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,iid ;</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">d为用户在卖家店内过去购买商品的总次数   衡量重复购买次数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#重复购买时间间隔</span><br></pre></td></tr></table></figure></p>
<h3 id="现在具有的属性（train06-csv）">现在具有的属性（train06.csv）</h3><p><code>注意：前两列没有作为属性，最后一列为类别标签</code><br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">user_id,merchant_id,a,b,c,d,u1,u2,u3,u4,s1,s2,s3,s4,age_range,gender,cid-pro,bid-pro,label</span><br><span class="line"><span class="number">34176</span>,<span class="number">3906</span>,<span class="number">36</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">410</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">34</span>,<span class="number">14870</span>,<span class="number">961</span>,<span class="number">28</span>,<span class="number">410</span>,<span class="number">6.0</span>,<span class="number">0.0</span>,<span class="number">0.30499243304121354</span>,<span class="number">1.0</span>,<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="number">34176</span>,<span class="number">121</span>,<span class="number">13</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">410</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">34</span>,<span class="number">72265</span>,<span class="number">2699</span>,<span class="number">121</span>,<span class="number">4780</span>,<span class="number">6.0</span>,<span class="number">0.0</span>,<span class="number">1.0</span>,<span class="number">1.0</span>,<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="number">34176</span>,<span class="number">4356</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">410</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">34</span>,<span class="number">6094</span>,<span class="number">196</span>,<span class="number">16</span>,<span class="number">963</span>,<span class="number">6.0</span>,<span class="number">0.0</span>,<span class="number">0.8181818181818182</span>,<span class="number">0.7826086956521741</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<h3 id="links">links</h3><p><a href="https://dato.com/learn/userguide/" target="_blank" rel="external">https://dato.com/learn/userguide/</a></p>
<h4 id="语法使用">语法使用</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#重命名列名字</span></span><br><span class="line">t.rename(columns=&#123;<span class="string">'class'</span>:<span class="string">'label'</span>&#125;,inplace=<span class="keyword">True</span>)</span><br><span class="line"><span class="comment">#shuffle</span></span><br><span class="line">index2=np.arange(len(t))</span><br><span class="line">np.random.shuffle(index2)</span><br><span class="line">t.reindex(index=index2)</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="create_table">create table</h3><p>首先创建一个数据库表<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">#字段含义分别为 用户id 商品id 类别id 卖家id 品牌id 时间 操作行为</span><br><span class="line">create <span class="tag">table</span> big(</span><br><span class="line">uid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">cid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span> ,</span><br><span class="line">sid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">bid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="tag">time</span> int,</span><br><span class="line">action tinyint</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="id">#create</span> index on field `aciton` ...</span><br><span class="line">create index  index_action on <span class="function"><span class="title">big</span><span class="params">(action)</span></span></span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="ijcai" scheme="http://needpp.com/tags/ijcai/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[pandas数据操作]]></title>
    <link href="http://needpp.com/2015/04/27/pandas%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/"/>
    <id>http://needpp.com/2015/04/27/pandas数据操作/</id>
    <published>2015-04-26T16:00:00.000Z</published>
    <updated>2015-12-12T03:11:54.183Z</updated>
    <content type="html"><![CDATA[<h2 id="Pandas_数据处理">Pandas 数据处理</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">imort pandas <span class="keyword">as</span> pd</span><br><span class="line">生成随机数</span><br><span class="line">s=np.random.randint (<span class="number">0</span>,<span class="number">15951</span>,<span class="number">5000</span>)</span><br><span class="line">讲dataframe的数据写入csv文件</span><br><span class="line">dtest.to_csv (<span class="string">"test.csv"</span>,index=<span class="keyword">False</span>)</span><br><span class="line">读取csv文件到dataframe</span><br><span class="line">test=pd.read_csv(<span class="string">"test_format1.csv"</span>)</span><br><span class="line">添加一列</span><br><span class="line">c[<span class="string">'lable'</span>]=e</span><br><span class="line">删除一列</span><br><span class="line">dtest=d.drop([<span class="string">'prob'</span>],axis=<span class="number">1</span>)</span><br><span class="line">join操作</span><br><span class="line">d=pd.merge (test,b,on=[<span class="string">'user_id'</span>,<span class="string">'merchant_id'</span>])</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="code">code</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> linear_model</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> cross_validation</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.externals <span class="keyword">import</span> joblib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    data=pd.read_csv(<span class="string">"/home/spark/data/2015/data_format1/train.csv"</span>)</span><br><span class="line">    <span class="comment">#test=np.loadtxt("/tmp/test.txt",delimiter="\t",dtype=np.int32)</span></span><br><span class="line">    X=data.iloc[:,<span class="number">0</span>:-<span class="number">1</span>]</span><br><span class="line">    target=data[<span class="string">'lable'</span>]</span><br><span class="line">    </span><br><span class="line">    test=pd.read_csv(<span class="string">"/home/spark/data/2015/data_format1/test.csv"</span>)</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    X_train,X_test,y_train,y_test=cross_validation.train_test_split(X,target,test_size=<span class="number">0.1</span>,random_state=<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">"begin fit the model...."</span>)</span><br><span class="line">    </span><br><span class="line">    clf=linear_model.LogisticRegression(penalty=<span class="string">'l2'</span>, dual=<span class="keyword">False</span>, tol=<span class="number">0.0001</span>, C=<span class="number">1.0</span>, fit_intercept=<span class="keyword">True</span>, intercept_scaling=<span class="number">1</span>, class_weight=<span class="keyword">None</span>, random_state=<span class="keyword">None</span>)</span><br><span class="line">    clf.fit(X,target)</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">"the model have train success, we will save the model to file..."</span>)</span><br><span class="line"></span><br><span class="line">    p=clf.predict_proba(test)</span><br><span class="line">    </span><br><span class="line">    reslut=test.drop([<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>],axis=<span class="number">1</span>)</span><br><span class="line">    reslut[<span class="string">'prob'</span>]=p[:,<span class="number">1</span>]</span><br><span class="line">    </span><br><span class="line">    reslut.to_csv(<span class="string">"/home/spark/data/2015/data_format1/predict.csv"</span>,index=<span class="keyword">False</span>)</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Pandas_数据处理">Pandas 数据处理</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">imort pandas <span class="keyword">as</span> pd</span><br><span class="line">生成随机数</span><br><span class="line">s=np.random.randint (<span class="number">0</span>,<span class="number">15951</span>,<span class="number">5000</span>)</span><br><span class="line">讲dataframe的数据写入csv文件</span><br><span class="line">dtest.to_csv (<span class="string">"test.csv"</span>,index=<span class="keyword">False</span>)</span><br><span class="line">读取csv文件到dataframe</span><br><span class="line">test=pd.read_csv(<span class="string">"test_format1.csv"</span>)</span><br><span class="line">添加一列</span><br><span class="line">c[<span class="string">'lable'</span>]=e</span><br><span class="line">删除一列</span><br><span class="line">dtest=d.drop([<span class="string">'prob'</span>],axis=<span class="number">1</span>)</span><br><span class="line">join操作</span><br><span class="line">d=pd.merge (test,b,on=[<span class="string">'user_id'</span>,<span class="string">'merchant_id'</span>])</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="pandas" scheme="http://needpp.com/tags/pandas/"/>
    
      <category term="python" scheme="http://needpp.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Q命令在csv和tsv上使用sql语句]]></title>
    <link href="http://needpp.com/2015/04/22/Q%E5%91%BD%E4%BB%A4%E5%9C%A8csv%E5%92%8Ctsv%E4%B8%8A%E4%BD%BF%E7%94%A8sql%E8%AF%AD%E5%8F%A5/"/>
    <id>http://needpp.com/2015/04/22/Q命令在csv和tsv上使用sql语句/</id>
    <published>2015-04-21T16:00:00.000Z</published>
    <updated>2015-12-15T14:44:57.998Z</updated>
    <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">q allows performing SQL-like statements on tabular text data. Its purpose is to bring SQL expressive power to the Linux command line and to provide easy access to text as actual data.</span><br><span class="line"></span><br><span class="line">Query should be an SQL-like query which contains filenames instead of table names (or - for stdin). The query itself should be provided as one parameter to the tool (i.e. enclosed in quotes).</span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">Use</span> -H <span class="keyword">to</span> signify that the <span class="keyword">input</span> contains a header line. <span class="keyword">Column</span> <span class="keyword">names</span> will be detected automatically <span class="keyword">in</span> that <span class="keyword">case</span>, <span class="keyword">and</span> can be used <span class="keyword">in</span> the <span class="keyword">query</span>. <span class="keyword">If</span> this <span class="keyword">option</span> <span class="keyword">is</span> <span class="keyword">not</span> provided, <span class="keyword">columns</span> will be named cX, <span class="keyword">starting</span> <span class="keyword">with</span> <span class="number">1</span> (<span class="keyword">e</span>.<span class="keyword">g</span>. q <span class="string">"SELECT c3,c8 from ..."</span>).</span><br><span class="line"></span><br><span class="line"><span class="keyword">Use</span> -<span class="keyword">d</span> <span class="keyword">to</span> specify the <span class="keyword">input</span> delimiter.</span><br><span class="line"></span><br><span class="line"><span class="keyword">Column</span> types <span class="keyword">are</span> <span class="keyword">auto</span> detected <span class="keyword">by</span> the tool, <span class="keyword">no</span> casting <span class="keyword">is</span> needed.</span><br><span class="line"></span><br><span class="line">Please note that <span class="keyword">column</span> <span class="keyword">names</span> that <span class="keyword">include</span> spaces need <span class="keyword">to</span> be used <span class="keyword">in</span> the <span class="keyword">query</span> <span class="keyword">with</span> back-ticks, <span class="keyword">as</span> per the sqlite standard.</span><br><span class="line"></span><br><span class="line"><span class="keyword">Query</span>/<span class="keyword">Input</span>/<span class="keyword">Output</span> encodings <span class="keyword">are</span> fully supported (<span class="keyword">and</span> q tries <span class="keyword">to</span> provide <span class="keyword">out</span>-<span class="keyword">of</span>-the-box usability <span class="keyword">in</span> that area). Please <span class="keyword">use</span> -<span class="keyword">e</span>,-<span class="keyword">E</span> <span class="keyword">and</span> -Q <span class="keyword">to</span> control <span class="keyword">encoding</span> <span class="keyword">if</span> needed.</span><br><span class="line"></span><br><span class="line">All sqlite3 <span class="keyword">SQL</span> constructs <span class="keyword">are</span> supported, <span class="keyword">including</span> joins across files (<span class="keyword">use</span> an <span class="keyword">alias</span> <span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">table</span>).</span><br><span class="line">See https://github.com/harelba/q <span class="keyword">for</span> more details.</span><br><span class="line"></span><br><span class="line">&lt;!<span class="comment">--more--&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>i.csv 文件<br><figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line">item_id,item_geohash,item_category</span><br><span class="line"><span class="number">312051294</span>,,<span class="number">8270</span></span><br><span class="line"><span class="number">99999754</span>,,<span class="number">7393</span></span><br><span class="line"><span class="number">131746128</span>,,<span class="number">7876</span></span><br><span class="line"><span class="number">385731330</span>,,<span class="number">10544</span></span><br><span class="line"><span class="number">100004415</span>,,<span class="number">3064</span></span><br><span class="line"><span class="number">76588345</span>,<span class="number">95</span>qqvei,<span class="number">5411</span></span><br><span class="line"><span class="number">312053799</span>,,<span class="number">13547</span></span><br><span class="line"><span class="number">100004955</span>,,<span class="number">7033</span></span><br><span class="line"><span class="number">312322681</span>,,<span class="number">8376</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line">cat i.csv | q -H -d ',' <span class="string">"select * from -"</span></span><br><span class="line"></span><br><span class="line"><span class="number">312051294</span>,,<span class="number">8270</span></span><br><span class="line"><span class="number">99999754</span>,,<span class="number">7393</span></span><br><span class="line"><span class="number">131746128</span>,,<span class="number">7876</span></span><br><span class="line"><span class="number">385731330</span>,,<span class="number">10544</span></span><br><span class="line"><span class="number">100004415</span>,,<span class="number">3064</span></span><br><span class="line"><span class="number">76588345</span>,<span class="number">95</span>qqvei,<span class="number">5411</span></span><br><span class="line"><span class="number">312053799</span>,,<span class="number">13547</span></span><br><span class="line"><span class="number">100004955</span>,,<span class="number">7033</span></span><br><span class="line"><span class="number">312322681</span>,,<span class="number">8376</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">q allows performing SQL-like statements on tabular text da]]>
    </summary>
    
      <category term="q" scheme="http://needpp.com/tags/q/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[spark car]]></title>
    <link href="http://needpp.com/2015/04/08/spark%20car/"/>
    <id>http://needpp.com/2015/04/08/spark car/</id>
    <published>2015-04-07T16:00:00.000Z</published>
    <updated>2015-11-28T05:11:38.453Z</updated>
    <content type="html"><![CDATA[<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">bin/spark-submit --class CarCheck --<span class="keyword">master</span> <span class="title">yarn-client</span>  /home/spark/temp/lib/SparkExample.jar  hdfs://<span class="literal">master</span>:<span class="number">9000</span>/t/newfile hdfs://<span class="literal">master</span>:<span class="number">9000</span>/t/output2</span><br></pre></td></tr></table></figure>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by spark on 15-3-18.</span><br><span class="line"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.<span class="type">SimpleDateFormat</span></span><br><span class="line"><span class="keyword">import</span> scala.util.control.<span class="type">Breaks</span>._</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.&#123;<span class="type">SparkConf</span>, <span class="type">SparkContext</span>&#125;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.<span class="type">SparkContext</span>._</span><br><span class="line"><span class="comment">/** Computes an approximation to pi */</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">CarCheck</span> &#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span>(</span>args: <span class="type">Array</span>[<span class="type">String</span>]) &#123;</span><br><span class="line">    <span class="keyword">if</span>(args.length!=<span class="number">2</span>)&#123;</span><br><span class="line">      <span class="type">System</span>.err.println(<span class="string">"Usage : SparkDemo &lt;input file&gt; &lt;output file &gt;"</span>)</span><br><span class="line">      <span class="type">System</span>.exit(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">val</span> conf = <span class="keyword">new</span> <span class="type">SparkConf</span>().setMaster(<span class="string">"local"</span>).setAppName(<span class="string">"cardata"</span>)</span><br><span class="line">    <span class="keyword">val</span> spark = <span class="keyword">new</span> <span class="type">SparkContext</span>(conf)</span><br><span class="line"></span><br><span class="line"><span class="comment">//    val file=spark.textFile("/home/spark/data/cardata/cheliunorm.csv")</span></span><br><span class="line">    <span class="keyword">val</span> file=spark.textFile(args(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// such as (carnum,line) like m-v</span></span><br><span class="line">    <span class="keyword">val</span> cars=file.map(line=&gt;&#123; <span class="keyword">val</span> fileds = line.split(<span class="string">","</span>)</span><br><span class="line">      (fileds(<span class="number">0</span>), line)&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> order=cars.groupByKey().map(data=&gt;&#123;</span><br><span class="line">      <span class="comment">//we can order by time , however the dateformat is not fit</span></span><br><span class="line">      <span class="comment">//repair it after coding it</span></span><br><span class="line">      <span class="keyword">val</span> sort=data._2.toList.sortWith(_ &lt; _)</span><br><span class="line">      (data._1,sort)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> sdf=<span class="keyword">new</span> <span class="type">SimpleDateFormat</span>(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> keyi=order.map(data=&gt;&#123;</span><br><span class="line">      <span class="comment">//粤ELQ311,2013-10-8 13:16:21,卡口——兴达路贤和路口,43,2,1</span></span><br><span class="line">      <span class="keyword">val</span> list=data._2</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">      <span class="keyword">var</span> flag=<span class="literal">true</span></span><br><span class="line">      <span class="keyword">val</span> distance=<span class="keyword">new</span> <span class="type">Distance</span></span><br><span class="line">      <span class="keyword">while</span>(list.size &gt;<span class="number">3</span> &amp;&amp; i &lt; list.size-<span class="number">1</span> &amp;&amp; flag ) &#123;</span><br><span class="line">        <span class="comment">//粤ELQ311,2013/10/8 13:16:21,卡口——兴达路贤和路口,43,2,1,112.87741,23.17866,1</span></span><br><span class="line">        <span class="keyword">val</span> pre = list(i).split(<span class="string">","</span>)</span><br><span class="line">        <span class="keyword">val</span> cur = list(i + <span class="number">1</span>).split(<span class="string">","</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> t1=pre(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">val</span> lat1=pre(<span class="number">7</span>).toDouble</span><br><span class="line">        <span class="keyword">val</span> lng1=pre(<span class="number">6</span>).toDouble</span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> t2=cur(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">val</span> lat2=cur(<span class="number">7</span>).toDouble</span><br><span class="line">        <span class="keyword">val</span> lng2=cur(<span class="number">6</span>).toDouble</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> realtime = (sdf.parse(t2).getTime - sdf.parse(t1).getTime) / <span class="number">1000</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> dis=distance.<span class="type">GetDistance</span>(lat1,lng1,lat2,lng2)</span><br><span class="line"></span><br><span class="line"><span class="comment">//        println("dis=="+dis/33)</span></span><br><span class="line"><span class="comment">//        println("time=="+realtime)</span></span><br><span class="line">        <span class="keyword">if</span>(t1==t2)&#123;</span><br><span class="line">          i=i+<span class="number">1</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">if</span>(dis/<span class="number">100</span> &gt; realtime)&#123;</span><br><span class="line">            flag=<span class="literal">false</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        i=i+<span class="number">1</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// check the final result</span></span><br><span class="line">      <span class="keyword">if</span>(flag==<span class="literal">false</span>)&#123;</span><br><span class="line">        (data._1,<span class="string">"keyi"</span>,<span class="string">"cout"</span>,flag)</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        (data._1,<span class="string">"normal~~~~~~~~~~~~~~"</span>,list.size,flag)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">    <span class="keyword">val</span> result=keyi.filter(x=&gt;x._2==<span class="string">"keyi"</span>)</span><br><span class="line"></span><br><span class="line">    result.collect().foreach(println)</span><br><span class="line"></span><br><span class="line">    result.saveAsTextFile(args(<span class="number">1</span>))</span><br><span class="line">    print(result.count())</span><br><span class="line">    spark.stop()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">bin/spark-submit --class CarCheck --<span class="keyword]]>
    </summary>
    
      <category term="car" scheme="http://needpp.com/tags/car/"/>
    
      <category term="spark" scheme="http://needpp.com/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[about-my-blog]]></title>
    <link href="http://needpp.com/2015/03/25/Resume/"/>
    <id>http://needpp.com/2015/03/25/Resume/</id>
    <published>2015-03-24T16:00:00.000Z</published>
    <updated>2015-12-15T14:50:21.366Z</updated>
    <content type="html"><![CDATA[<h1 id="个人信息">个人信息</h1><ul>
<li>Thinkml/男/1990 </li>
<li>硕士/华南理工大学计算机</li>
<li>工作年限：在读</li>
<li>关于：本人积极乐观、待人诚恳、敢于担当。对于新鲜事物有着火一般的热情，喜欢尝试，乐于分享，热衷于学习新技术、新知识并通过写博客的方式进行记录学习过程中遇到的坑。有过良好的软件开发规范的指导经历,具有良好的团队合作能力及项目文档书写能力。对项目开发流程有着深刻理解，善于与他人沟通、积极进取,有强烈的责任心。</li>
</ul>
<h1 id="联系方式">联系方式</h1><ul>
<li>Blog :  <a href="http://me.needpp.com/" target="_blank" rel="external">http://me.needpp.com/</a></li>
</ul>
<h1 id="技能清单">技能清单</h1><ul>
<li>熟悉Java和J2EE开发，熟悉Struts/Hibernate/Spring/Mybatis等开源框架。</li>
<li>熟练使用Myeclipse、Visual Studio、SPSS、Weka等工具。</li>
<li>熟悉常用机器学习算法原理与应用场景以及统计学相关知识。</li>
<li>熟悉常用算法与数据结构。</li>
<li>熟练掌握Mysql、Sql Server操作，有过数据库优化经验。</li>
<li>熟悉Linux操作，掌握Shell编程熟悉TCP/IP协议相关知识。</li>
<li>了解C++、Python、R语言。</li>
<li>了解Hadoop、Spark分布式计算框架。</li>
<li>了解BootStrap、Ajax、JQuery等前端开发技术。</li>
<li>了解Git、Cvs等版本控制操作。</li>
</ul>
<a id="more"></a>
<h1 id="项目经历">项目经历</h1><h3 id="2015/4-2015/5_IJCAI-15竞赛_商家开展促销之后重复购买用户的预测">2015/4-2015/5  IJCAI-15竞赛  商家开展促销之后重复购买用户的预测</h3><ul>
<li>简述：为了吸引更多的买家来购买产品，商家们通常会在特殊节日比如“双11”开展大规模的打折或者发放购物券的促销活动。通常这样吸引过来的用户往往是一锤子买卖，没有过多的用户黏性。本次的任务就是希望通过过去六个月的用户行为数据来预测未来可能会在这个店家再次发生购买行为的用户，从而可以用来指导促销策略，有针对性的针对黏性用户开展促销策略活动，提升ROI。本次竞赛由天猫主办，提供了42w用户在“双11”前六个月的近5500w条商品行为记录。</li>
<li>职责：导入mysql数据库、清理数据、分析并提取特征。主要使用sql和pandas进行数据处理和特征的生成，使用scikit-learing和graphlab-create进行模型的构建。</li>
</ul>
<h3 id="2013/09-2013/11_基于Hadoop的电信用户交往圈构建及特定用户识别_|_3人|研发人员">2013/09-2013/11 基于Hadoop的电信用户交往圈构建及特定用户识别 | 3人|研发人员</h3><ul>
<li>简述：这个比赛主要任务就是根据电信研究院提供的用户通话记录、用户短信记录、    用户信息来判断该用户是否为学生，根据上述信息发现用户所在的短信圈子和通话圈子。</li>
<li>职责：1）特定用户识别任务：分析数据、提取特征，使用Mahout的RandomForest进行建模。2）交往圈子发现：构建用户短信网络、通话记录网络，实现基于Hadoop的社区发现算法（R方法）进行圈子发现。</li>
</ul>
<h3 id="2014/4-2014/7_关于网络异常问题的检测研究_|_5人_|_研发人员">2014/4-2014/7 关于网络异常问题的检测研究 | 5人 | 研发人员</h3><ul>
<li>简述： 传统的网络问题检测主要依据工程师相关经验，根据某些参数的异常区间来进行定位，识别出故障发生的大致原因。人力成本大而且效果也不是非常好。该项目    的目的是想通过统计机器学习的方式，从以往的故障原因以及样本数据中进行分析和学习，得到问题检测模型，然后通过这个模型来进行问题发生原因的定位。</li>
<li>职责：负责对问题的建模，分析与验证。处理不平衡样本数据，借助weka的学习库进行二次开发，完成对该问题的线上验证接口的编写。</li>
</ul>
<h3 id="2013/10_~_2014/9_基于hadoop平台的套牌车辆识别_|_5人_|_研发人员">2013/10 ~ 2014/9  基于hadoop平台的套牌车辆识别 | 5人 | 研发人员</h3><ul>
<li>描述：通过大量的车辆经过卡口的记录信息的分析，运用数据挖掘、统计分析、以及时间距离模型、图模型等方法从中提取出疑似套牌的车辆并把其反馈到公路局。</li>
<li>职责：对数据进行预处理，构建模型并通过在hadoop上编写MapReduce程序对模型结果进行验证与优化，选择合适模型进行数据分析处理。并且借助百度地理位置信息服务LBS完成对可疑车辆轨迹绘制的可视化操作。</li>
</ul>
<h3 id="2013/5~2013/6_基于mahout的电影推荐系统_|_6人_|_小组负责人">2013/5~2013/6  基于mahout的电影推荐系统 | 6人 | 小组负责人</h3><ul>
<li>简述：该项目是项目小组完成的信息检索课程的一个课程设计，整个系统采用MVC的模式进行分块。主要分为数据录入、生成推荐清单、结果导入mysql三个模块。其中推荐模块算法采用mahout的协同过滤算法进行加权重排名。</li>
<li>职责：主要负责整个系统的设计、任务的分配以及推荐模块算法的编写整合。</li>
</ul>
<h3 id="2013/03-2013/09黑龙江公路养护系统_|_8人_|_研发人员">2013/03-2013/09黑龙江公路养护系统 | 8人 | 研发人员</h3><ul>
<li>简述：该项目是黑龙江公路养护系统的一期项目，针对高速公路基本信息的维护，包含系统管理、隧道、涵道、绿化、桥梁、安检等信息的维护。系统采用 Spring、Mybatis和 Struct2 轻量级框架实现业务逻辑，使用 SQL Server 进行数据存储，通过 Ajax 异步方式对数据以 Json 格式进行交互。 </li>
<li>职责：主要负责隧道信息和桥梁信息的维护，与前端工程师协同完成数据的交互。</li>
</ul>
<h3 id="2012/09-2013/01锦原绩效考核信息管理系统_|_8人_|_研发人员">2012/09-2013/01锦原绩效考核信息管理系统 | 8人 | 研发人员</h3><ul>
<li>简述：绩效考核系统实现了便捷的对员工绩效进行考核评定，对锦原内部考核的考核方式进行抽象，该项目采用 B/S 架构，通过 Spring、Hibernate 和 Struct2 框架的结合简化系统部署难度.前端使用 ExtJs 与 Jsp 的结合能够获得良好的用户体验。</li>
<li>职责：完成系统架构搭建和基本信息的维护以及权限管理模块的编写。</li>
</ul>
<h1 id="开源项目和作品">开源项目和作品</h1><h2 id="开源项目">开源项目</h2><ul>
<li><a href="https://github.com/dcycome/MyStudy/tree/master/JsoupDemo" target="_blank" rel="external">新浪微博数据分析</a>    </li>
<li><a href="https://github.com/dcycome/MyStudy/tree/master/RecommenderMovie" target="_blank" rel="external">电影推荐系统</a> </li>
<li><a href="https://github.com/dcycome/MyStudy/tree/master/Hello-S" target="_blank" rel="external">人脸表情分析小应用</a></li>
</ul>
<h2 id="技术文章">技术文章</h2><ul>
<li><a href="http://lovefeiniu.sinaapp.com/post/41" target="_blank" rel="external">Machine Learing with OpenCV</a></li>
<li><a href="http://lovefeiniu.sinaapp.com/post/10" target="_blank" rel="external">Kdd99 dataset 分析</a></li>
<li><a href="http://lovefeiniu.sinaapp.com/post/3" target="_blank" rel="external">D3 学习笔记</a></li>
<li><a href="http://lovefeiniu.sinaapp.com/post/35" target="_blank" rel="external">Weka导出模型使用说明–网络数据分析</a></li>
<li><a href="http://lovefeiniu.sinaapp.com/post/2" target="_blank" rel="external">Android 学习笔记</a></li>
<li><a href="http://lovefeiniu.sinaapp.com/post/30" target="_blank" rel="external">关于套牌车数据分布式存储方案</a></li>
<li><a href="http://lovefeiniu.sinaapp.com/post/26" target="_blank" rel="external">南方电网用电时间序列分析</a></li>
<li><a href="http://lovefeiniu.sinaapp.com" target="_blank" rel="external">查看更多</a></li>
</ul>
<h1 id="技能清单-1">技能清单</h1><ul>
<li>分布式计算： Hadoop/Spark</li>
<li>数据挖掘： Weka/Mahout/Spss/MLib</li>
<li>数据处理： grep/sed/awk/python</li>
<li>Web框架：SSH</li>
<li>数据库相关：MySQL/Hbase/Hypertable/Redis</li>
<li>版本管理、文档和自动化部署工具：Svn/Git</li>
<li>云和开放平台：ACE/SAE/BAE/微博开放平台</li>
</ul>
<h1 id="致谢">致谢</h1><p>感谢您花时间阅读我的简历，期待能有机会和您共事。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="个人信息">个人信息</h1><ul>
<li>Thinkml/男/1990 </li>
<li>硕士/华南理工大学计算机</li>
<li>工作年限：在读</li>
<li>关于：本人积极乐观、待人诚恳、敢于担当。对于新鲜事物有着火一般的热情，喜欢尝试，乐于分享，热衷于学习新技术、新知识并通过写博客的方式进行记录学习过程中遇到的坑。有过良好的软件开发规范的指导经历,具有良好的团队合作能力及项目文档书写能力。对项目开发流程有着深刻理解，善于与他人沟通、积极进取,有强烈的责任心。</li>
</ul>
<h1 id="联系方式">联系方式</h1><ul>
<li>Blog :  <a href="http://me.needpp.com/">http://me.needpp.com/</a></li>
</ul>
<h1 id="技能清单">技能清单</h1><ul>
<li>熟悉Java和J2EE开发，熟悉Struts/Hibernate/Spring/Mybatis等开源框架。</li>
<li>熟练使用Myeclipse、Visual Studio、SPSS、Weka等工具。</li>
<li>熟悉常用机器学习算法原理与应用场景以及统计学相关知识。</li>
<li>熟悉常用算法与数据结构。</li>
<li>熟练掌握Mysql、Sql Server操作，有过数据库优化经验。</li>
<li>熟悉Linux操作，掌握Shell编程熟悉TCP/IP协议相关知识。</li>
<li>了解C++、Python、R语言。</li>
<li>了解Hadoop、Spark分布式计算框架。</li>
<li>了解BootStrap、Ajax、JQuery等前端开发技术。</li>
<li>了解Git、Cvs等版本控制操作。</li>
</ul>]]>
    
    </summary>
    
      <category term="about" scheme="http://needpp.com/tags/about/"/>
    
      <category term="me" scheme="http://needpp.com/tags/me/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Spark Hello World]]></title>
    <link href="http://needpp.com/2015/03/18/spark%20demo%20to%20save.../"/>
    <id>http://needpp.com/2015/03/18/spark demo to save.../</id>
    <published>2015-03-17T16:00:00.000Z</published>
    <updated>2015-11-29T15:05:19.588Z</updated>
    <content type="html"><![CDATA[<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by spark on 15-3-18.</span><br><span class="line"> */</span></span><br><span class="line">import org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.SparkContext</span><span class="class">._</span></span><br><span class="line">import org<span class="class">.apache</span><span class="class">.spark</span>.&#123;SparkContext, SparkConf&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Computes an approximation to pi */</span></span><br><span class="line"><span class="tag">object</span> SparkDemo &#123;</span><br><span class="line">  def <span class="function">main</span>(args<span class="value">: Array[String]) &#123;</span><br><span class="line">    <span class="function">if</span>(args.length!=<span class="number">2</span>)&#123;</span><br><span class="line">      System.err.<span class="function">println</span>(<span class="string">"Usage : SparkDemo &lt;input file&gt; &lt;output file &gt;"</span>)</span><br><span class="line">      System.<span class="function">exit</span>(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    val conf = new <span class="function">SparkConf</span>().<span class="function">setMaster</span>(<span class="string">"local"</span>).<span class="function">setAppName</span>(<span class="string">"WordCount"</span>)</span><br><span class="line">    val spark = new <span class="function">SparkContext</span>(conf)</span><br><span class="line"></span><br><span class="line">    val file=spark.<span class="function">textFile</span>(<span class="function">args</span>(<span class="number">0</span>))</span><br><span class="line">    val counts=file.<span class="function">map</span>((_,<span class="number">1</span>)).<span class="function">reduceByKey</span>(_+_)</span><br><span class="line">    counts.<span class="function">saveAsTextFile</span>(<span class="function">args</span>(<span class="number">1</span>))</span><br><span class="line">    spark.<span class="function">stop</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> *]]>
    </summary>
    
      <category term="spark" scheme="http://needpp.com/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[something]]></title>
    <link href="http://needpp.com/2015/03/18/something/"/>
    <id>http://needpp.com/2015/03/18/something/</id>
    <published>2015-03-17T16:00:00.000Z</published>
    <updated>2015-12-15T14:46:05.490Z</updated>
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">BinarySearch</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> len=a.lenght;</span><br><span class="line">	<span class="keyword">int</span> low=<span class="number">0</span>,high=len-<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line">		<span class="keyword">int</span> mid=(low+high)/<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">if</span>(a[mid]==num)&#123;</span><br><span class="line">			<span class="keyword">return</span> mid;</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[mid]&lt;num)&#123;</span><br><span class="line">			low=mid+<span class="number">1</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			high=mid-<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span>  <span class="title">BinarySearch</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> lo, <span class="keyword">int</span> hi,<span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(lo&lt;=hi)&#123;</span><br><span class="line">		<span class="keyword">int</span> mid=(low+high)/<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">if</span>(key==a[mid])</span><br><span class="line">			<span class="keyword">return</span> mid;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(key&lt;a[mid]) </span><br><span class="line">			<span class="keyword">return</span> BinarySearch(key,lo,mid-<span class="number">1</span>,key);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(key&gt;a[mid]) </span><br><span class="line">			<span class="keyword">return</span> BinarySearch(key,mid+<span class="number">1</span>,high,key);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// swap</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> a[] ,<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> temp=a[i];</span><br><span class="line">	a[i]=a[j];</span><br><span class="line">	a[j]=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// select sort</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectsort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> min=i;</span><br><span class="line">		<span class="comment">//from i+1 to find the mini</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;len;j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[min]&gt;a[j])&#123;</span><br><span class="line">				min=j;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//swap with the i element</span></span><br><span class="line">		swap(a,i,min);</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertsort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&gt;<span class="number">0</span>;j--)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[j]&lt;a[j-<span class="number">1</span>])&#123;</span><br><span class="line">				swap(a,j,j-<span class="number">1</span>)</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shellsort</span><span class="params">(<span class="keyword">int</span> a[] ,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> h=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(h&lt;len/<span class="number">3</span>) h=h*<span class="number">3</span>+<span class="number">1</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(h&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;h;i++)&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&gt;=h;j=j-h)&#123;</span><br><span class="line">				<span class="keyword">if</span>(a[j]&lt;a[j-h])&#123;</span><br><span class="line">					swap(a,j,j-h);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		h=h/<span class="number">3</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//heap swim to top</span></span><br><span class="line"><span class="comment">//from boot to top</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swim</span><span class="params">(<span class="keyword">int</span> k )</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(k&gt;<span class="number">1</span>&amp;&amp;pq[k]&gt;pq[k/<span class="number">2</span>])&#123;</span><br><span class="line">		swap(pq,k,k/<span class="number">2</span>);</span><br><span class="line">		k=k/<span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sink</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">2</span>*k&lt;n)&#123;</span><br><span class="line">		<span class="keyword">int</span> j=<span class="number">2</span>*k;</span><br><span class="line">		<span class="keyword">if</span>(pq[j]&lt;pq[j+<span class="number">1</span>]) j++;</span><br><span class="line">		<span class="keyword">if</span>(pq[k]&gt;pq[j]) <span class="keyword">break</span>;</span><br><span class="line">		<span class="comment">//else swap the parent and the bigger chilren</span></span><br><span class="line">		swap(pq,k,j);</span><br><span class="line">		<span class="comment">//set the current node to chilren</span></span><br><span class="line">		k=j;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertheap</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">	pq[++N]=s;</span><br><span class="line">	swim(N);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delheaptop</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> max=pq[<span class="number">1</span>];</span><br><span class="line">	swap(pq,<span class="number">1</span>,N--);</span><br><span class="line">	sink(<span class="number">1</span>); <span class="comment">//rebuild the heap from up to down</span></span><br><span class="line">	<span class="comment">//set the last to default value</span></span><br><span class="line">	<span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getvalue</span><span class="params">(Node root,<span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(root=null) <span class="keyword">return</span>;</span><br><span class="line">	<span class="keyword">if</span>(key&gt;root.key) <span class="keyword">return</span> getvalue(root.right);</span><br><span class="line">	<span class="keyword">if</span>(key&lt;root.key) <span class="keyword">return</span> getvalue(root.left);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> root.value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getvalue</span><span class="params">(<span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line">	Node node=root;</span><br><span class="line">	<span class="keyword">while</span>(node!=null)&#123;</span><br><span class="line">		<span class="keyword">if</span>(key&gt;node.key)&#123;</span><br><span class="line">			node=node.right;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(key&lt;node.key)&#123;</span><br><span class="line">			node=node.left;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			result=node.value;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span> a[] ,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i=left,j=right+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">		<span class="keyword">while</span>(a[++i]&lt;a[left])</span><br><span class="line">			<span class="keyword">if</span>(i==right) <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">while</span>(a[--j]&gt;a[left])</span><br><span class="line">			<span class="keyword">if</span>(i==left) <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">if</span>(i&gt;=j) <span class="keyword">break</span>;</span><br><span class="line">		swap(a,i,j)</span><br><span class="line">	&#125;</span><br><span class="line">	swap(a,j,left);</span><br><span class="line">	<span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> low,<span class="keyword">int</span> high)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(low&gt;=high) <span class="keyword">return</span>;</span><br><span class="line">	<span class="keyword">int</span> partition=partition(a,low,high);</span><br><span class="line">	sort(a,low,partion-<span class="number">1</span>);</span><br><span class="line">	sort(a,partion+<span class="number">1</span>,high);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(Graph g,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">	marked[v]=<span class="literal">true</span>;</span><br><span class="line">	count++;</span><br><span class="line">	foreach(<span class="keyword">int</span> vertical in g.GetAdjacency(v))&#123;</span><br><span class="line">		<span class="keyword">if</span>(!marked(vertical))&#123;</span><br><span class="line">			dfs(g,vertical);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">BinarySearch</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> len=a.lenght;</span><br><span class="line">	<span class="keyword">int</span> low=<span class="number">0</span>,high=len-<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line">		<span class="keyword">int</span> mid=(low+high)/<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">if</span>(a[mid]==num)&#123;</span><br><span class="line">			<span class="keyword">return</span> mid;</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[mid]&lt;num)&#123;</span><br><span class="line">			low=mid+<span class="number">1</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			high=mid-<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span>  <span class="title">BinarySearch</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> lo, <span class="keyword">int</span> hi,<span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(lo&lt;=hi)&#123;</span><br><span class="line">		<span class="keyword">int</span> mid=(low+high)/<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">if</span>(key==a[mid])</span><br><span class="line">			<span class="keyword">return</span> mid;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(key&lt;a[mid]) </span><br><span class="line">			<span class="keyword">return</span> BinarySearch(key,lo,mid-<span class="number">1</span>,key);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(key&gt;a[mid]) </span><br><span class="line">			<span class="keyword">return</span> BinarySearch(key,mid+<span class="number">1</span>,high,key);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="others" scheme="http://needpp.com/tags/others/"/>
    
  </entry>
  
</feed>
